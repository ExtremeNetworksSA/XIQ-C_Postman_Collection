{
	"info": {
		"_postman_id": "16285205-9806-4f81-af02-0db6ed74f441",
		"name": "XIQ-C API 10.12.01",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4056946",
		"_collection_link": "https://gold-escape-604608.postman.co/workspace/XIQ-C-Workspace~a908515a-7140-42a8-9e59-91663cf86450/collection/4056946-16285205-9806-4f81-af02-0db6ed74f441?action=share&source=collection_link&creator=4056946"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"access_token\", jsonData['access_token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"grantType\": \"password\",\n   \"userId\": \"{{userId}}\",\n   \"password\": \"{{password}}\",\n   \"scope\": \"...\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/oauth2/token",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AccessControlManager",
			"item": [
				{
					"name": "Retrieve Access Control Information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/accesscontrol",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"accesscontrol"
							],
							"query": [
								{
									"key": "apserialnum",
									"value": "",
									"description": "The AP serial number that is used to find the site. Returns the ACL list for the site. If a parameter is not provided, the global list is returned.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update access control infomation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": null,\n  \"canEdit\": null,\n  \"macMode\": 1,\n  \"macList\": [\n    \"24:A0:74:53:90:EF\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/accesscontrol",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"accesscontrol"
							],
							"query": [
								{
									"key": "apserialnum",
									"value": null,
									"description": "The AP serial number that is used to find the site. Returns the ACL list for the site. If a parameter is not provided, the global list is returned.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create access control list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": null,\n  \"canEdit\": null,\n  \"macMode\": 1,\n  \"macList\": [\n    \"24:A0:74:53:90:EF\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/accesscontrol",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"accesscontrol"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove access control list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": null,\n  \"canEdit\": null,\n  \"macMode\": 1,\n  \"macList\": [\n    \"24:A0:74:53:90:EF\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/accesscontrol",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"accesscontrol"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NSightManager",
			"item": [
				{
					"name": "Get configuration of NSight server",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/nsightconfig",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"nsightconfig"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update configuration of NSight server",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ip\": \"192.168.3.10\",\n  \"https\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/nsightconfig",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"nsightconfig"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AccessPointManager",
			"item": [
				{
					"name": "Get list of all access points",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps"
							],
							"query": [
								{
									"key": "brief",
									"value": "true",
									"description": "boolean\nDefault: true\nIf present and true, response includes AP basic (\"brief\") configuration and operational information.",
									"disabled": true
								},
								{
									"key": "inventory",
									"value": "false",
									"description": "boolean\nDefault: false\nIf present and true, response includes AP inventory information. It can be combined with the \"brief\" parameter.",
									"disabled": true
								},
								{
									"key": "country",
									"value": "UNITED_STATES",
									"description": "string (Country)\nEnum: \"AFGHANISTAN\" \"ALBANIA\" \"ALGERIA\" \"AMERICAN_SAMOA\" \"ANDORRA\" \"ANGOLA\" \"ANGUILLA\" \"ANTARCTICA\" \"ANTIGUA_BARBUDA\" \"ARGENTINA\" \"ARMENIA\" \"ARUBA\" \"AUSTRALIA\" \"AUSTRIA\" \"AZERBAIJAN\" \"BAHAMAS\" \"BAHRAIN\" \"BANGLADESH\" \"BARBADOS\" \"BELARUS\" \"BELGIUM\" \"BELIZE\" \"BENIN\" \"BERMUDA\" \"BHUTAN\" \"BOLIVIA\" \"BOSNIA_HERZEGOVINA\" \"BOTSWANA\" \"BOUVET_ISLAND\" \"BRAZIL\" \"BRITISH_INDIAN_OCEAN_TERRITORY\" \"BRUNEI_DARUSSALAM\" \"BULGARIA\" \"BURKINA_FASO\" \"BURUNDI\" \"CAMBODIA\" \"CAMEROON\" \"CANADA\" \"CAPE_VERDE\" \"CAYMAN_ISLANDS\" \"CENTRAL_AFRICAN_REPUBLIC\" \"CHAD\" \"CHILE\" \"CHINA\" \"CHRISTMAS_ISLAND\" \"COCOS_KEELING_ISLANDS\" \"COLOMBIA\" \"COMOROS\" \"CONGO\" \"CONGO_THE_DRC\" \"COOK_ISLANDS\" \"COSTA_RICA\" \"IVORY_COAST\" \"CROATIA\" \"CUBA\" \"CURACAO\" \"CYPRUS\" \"CZECH\" \"DENMARK\" \"DJIBOUTI\" \"DOMINICA\" \"DOMINICAN\" \"EAST_TIMOR\" \"ECUADOR\" \"EGYPT\" \"EL_SALVADOR\" \"EQUATORIAL_GUINEA\" \"ERITREA\" \"ESTONIA\" \"ETHIOPIA\" \"FALKLAND_ISLANDS_MALVINAS\" \"FAEROE_ISLANDS\" \"FIJI\" \"FINLAND\" \"FRANCE\" \"FRANCE_METROPOLITAN\" \"FRENCH_GUIANA\" \"FRENCH_POLYNESIA\" \"FRENCH_SOUTHERN_TERRITORIES\" \"GABON\" \"GAMBIA\" \"GEORGIA\" \"GERMANY\" \"GHANA\" \"GIBRALTAR\" \"GREECE\" \"GREENLAND\" \"GRENADA\" \"GUADELOUPE\" \"GUAM\" \"GUATEMALA\" \"GUINEA\" \"GUINEA_BISSAU\" \"GUYANA\" \"HAITI\" \"HEARD_AND_MC_DONALD_ISLANDS\" \"VATICAN\" \"HONDURAS\" \"HONG_KONG\" \"HUNGARY\" \"ICELAND\" \"INDIA\" \"INDONESIA\" \"IRAN\" \"IRAQ\" \"IRELAND\" \"ISRAEL\" \"ITALY\" \"JAMAICA\" \"JAPAN\" \"JORDAN\" \"KAZAKHSTAN\" \"KENYA\" \"KIRIBATI\" \"KOREA_NORTH\" \"KOREA\" \"KOSOVO\" \"KUWAIT\" \"KYRGYZSTAN\" \"LAOS\" \"LATVIA\" \"LEBANON\" \"LESOTHO\" \"LIBERIA\" \"LIBYA\" \"LIECHTENSTEIN\" \"LITHUANIA\" \"LUXEMBOURG\" \"MACAU\" \"MACAULL\" \"MACEDONIA\" \"MADAGASCAR\" \"MALAWI\" \"MALAYSIA\" \"MALDIVES\" \"MALI\" \"MALTA\" \"MARSHALL_ISLANDS\" \"MARTINIQUE\" \"MAURITANIA\" \"MAURITIUS\" \"MAYOTTE\" \"MEXICO\" \"MICRONESIA_FEDERATED_STATES_OF\" \"MOLDOVA_REPUBLIC_OF\" \"MONACO\" \"MONGOLIA\" \"MONTENEGRO\" \"MONTSERRAT\" \"MOROCCO\" \"MOZAMIBIQUE\" \"MYANMAR_BURMA\" \"NAMIBIA\" \"NAURU\" \"NEPAL\" \"NETHERLANDS\" \"NEW_CALEDONIA\" \"NEW_ZEALAND\" \"NICARAGUA\" \"NIGER\" \"NIGERIA\" \"NIUE\" \"NORFOLK_ISLAND\" \"NORTHERN_MARIANA_ISLANDS\" \"NORWAY\" \"OMAN\" \"PAKISTAN\" \"PALAU\" \"PANAMA\" \"PAPUA_NEW_GUINEA\" \"PARAGUAY\" \"PERU\" \"PHILIPPINES\" \"PITCAIRN\" \"POLAND\" \"PORTUGAL\" \"PUERTO_RICO\" \"QATAR\" \"REUNION\" \"ROMANIA\" \"RUSSIA\" \"RWANDA\" \"SAINT_KITTS_AND_NEVIS\" \"SAINT_LUCIA\" \"SAINT_VINCENT_AND_THE_GRENADINES\" \"SAMOA\" \"SAN_MARINO\" \"SAO_TOME_AND_PRINCIPE\" \"SAUDI_ARABIA\" \"SENEGAL\" \"SERBIA\" \"SERBIA_MONTENEGRO\" \"SEYCHELLES\" \"SIERRA_LEONE\" \"SINGAPORE\" \"SLOVAKIA\" \"SLOVENIA\" \"SOLOMON_ISLANDS\" \"SOMALIA\" \"SOUTH_AFRICA\" \"SOUTH_GEORGIA_AND_SOUTH_SS\" \"SOUTH_SUDAN\" \"SPAIN\" \"SRI_LANKA\" \"ST_HELENA\" \"ST_PIERRE_AND_MIQUELON\" \"SUDAN\" \"SURINAME\" \"SVALBARD_AND_JAN_MAYEN_ISLANDS\" \"SWAZILAND\" \"SWEDEN\" \"SWITZERLAND\" \"SYRIA\" \"TAIWAN\" \"TAJIKISTAN\" \"TANZANIA_UNITED_REPUBLIC_OF\" \"THAILAND\" \"TOGO\" \"TOKELAU\" \"TONGA\" \"TRINIDAD_AND_TOBAGO\" \"TUNISIA\" \"TURKEY\" \"TURKMENISTAN\" \"TURKS_AND_CAICOS_ISLANDS\" \"TUVALU\" \"UGANDA\" \"UKRAINE\" \"UAE\" \"UNITED_KINGDOM\" \"UNITED_STATES\" \"URUGUAY\" \"US_MINOR_ISLANDS\" \"UZBEKISTAN\" \"VANUATU\" \"VENEZUELA\" \"VIETNAM\" \"VIRGIN_ISLANDS_BRITISH\" \"VIRGIN_ISLANDS_US\" \"WALLIS_AND_FUTUNA_ISLANDS\" \"WESTERN_SAHARA\" \"YEMEN\" \"ZAMBIA\" \"ZIMBABWE\" \"DEBUG\" \"DEMO\" \"NETHERLANDS_ANTILLES\"\nExample: country=UNITED_STATES\nFilter APs based on the country code. AP models that are not certified for this country are omitted from the response.",
									"disabled": true
								},
								{
									"key": "serviceId",
									"value": null,
									"description": "string <uuid>\nGet all the APs based with the service.",
									"disabled": true
								},
								{
									"key": "feature",
									"value": "",
									"description": "string\nGet all the APs that support a given feature.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get filtered list of all access points",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/query",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"query"
							],
							"query": [
								{
									"key": "query",
									"value": "",
									"description": "string\nQuery string to filter the AP list.",
									"disabled": true
								},
								{
									"key": "requestedColumns",
									"value": "",
									"description": "Array of strings\nColumns list to show.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get filtered list of all access points visualize",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/query/visualize",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"query",
								"visualize"
							],
							"query": [
								{
									"key": "query",
									"value": "",
									"description": "string\nQuery string to filter the AP list.",
									"disabled": true
								},
								{
									"key": "columnsVisualize",
									"value": "",
									"description": "Array of strings\nColumns list to return",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Return the columns list for /v1/aps/query and /v1/aps/query/visualize",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/query/columns",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"query",
								"columns"
							],
							"query": [
								{
									"key": "suggestValues",
									"value": "true",
									"description": "boolean\nDefault: true\nScan for suggested values for columns",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service IDs that are assigned to the primary BSSID. Removing these services can cause a radio reset.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/bssid0",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"bssid0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new access point",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/create?serialNumber={{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"create"
							],
							"query": [
								{
									"key": "apName",
									"value": "",
									"description": "string\nA non-empty string containing the name of the new access point to be created",
									"disabled": true
								},
								{
									"key": "description",
									"value": null,
									"description": "string\nA user-supplied string describing this access point. Its contents can be completely arbitrary. It can be null or empty",
									"disabled": true
								},
								{
									"key": "hardwaretype",
									"value": null,
									"description": "string",
									"disabled": true
								},
								{
									"key": "serialNumber",
									"value": "{{apSerialNumber}}",
									"description": "REQUIRED STRING:\n (SerialNumber) ^[\\p{Print}&&[^ ;:&\\p{Cntrl}'\"]]{1,16}$\nExample: serialNumber=1730Y-1007800000\nValid access point serial number for the access point to be created"
								},
								{
									"key": "complianceRegion",
									"value": null,
									"description": "string\nValid complianceRegion taken from /v1/aps/hardwaretypes",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Access Point with Default values",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/default?hardwareType=AP305C-FCC",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"default"
							],
							"query": [
								{
									"key": "hardwareType",
									"value": "AP305C-FCC",
									"description": "string\nAccess point hardware type"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get hardware type and display names",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/displaynames",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"displaynames"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get hardware type and model names",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/hardwaretypes",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"hardwaretypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete list of access points by their serial numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/list",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update configuration for a group of access points",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"radios\": [\n    {\n      \"radioIndex\": 1,\n      \"mode\": \"sensor\",\n      \"channelwidth\": \"Ch1Width_20MHz\",\n      \"txMaxPower\": 0,\n      \"channel\": \"string\",\n      \"useSmartRf\": true\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/multiconfig",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"multiconfig"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate CSR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"csr\": {\n    \"keySize\": \"twentyFortyEight\",\n    \"country\": \"US\",\n    \"state\": \"CA\",\n    \"location\": \"San Jose\",\n    \"organization\": \"Extreme Networks\",\n    \"unit\": \"Wireless\",\n    \"commonNameType\": \"Mac\",\n    \"email\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/cert/signrequest",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"cert",
								"signrequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply certificate to APs. (Provide AP signed certificate tar).",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"string\",\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"filename\": \"string\",\n  \"data\": \"string - File database 64 encoded\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/cert/apply",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"cert",
								"apply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset certificate to default (removal)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/cert/reset",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"cert",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AP certificate information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/cert",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point platform names",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/platforms",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"platforms"
							],
							"query": [
								{
									"key": "country",
									"value": null,
									"description": "string (Country)\nEnum: \"AFGHANISTAN\" \"ALBANIA\" \"ALGERIA\" \"AMERICAN_SAMOA\" \"ANDORRA\" \"ANGOLA\" \"ANGUILLA\" \"ANTARCTICA\" \"ANTIGUA_BARBUDA\" \"ARGENTINA\" \"ARMENIA\" \"ARUBA\" \"AUSTRALIA\" \"AUSTRIA\" \"AZERBAIJAN\" \"BAHAMAS\" \"BAHRAIN\" \"BANGLADESH\" \"BARBADOS\" \"BELARUS\" \"BELGIUM\" \"BELIZE\" \"BENIN\" \"BERMUDA\" \"BHUTAN\" \"BOLIVIA\" \"BONAIRE_SINT_EUSTATIUS_AND_SABA\" \"BOSNIA_HERZEGOVINA\" \"BOTSWANA\" \"BOUVET_ISLAND\" \"BRAZIL\" \"BRITISH_INDIAN_OCEAN_TERRITORY\" \"BRUNEI_DARUSSALAM\" \"BULGARIA\" \"BURKINA_FASO\" \"BURUNDI\" \"CAMBODIA\" \"CAMEROON\" \"CANADA\" \"CAPE_VERDE\" \"CAYMAN_ISLANDS\" \"CENTRAL_AFRICAN_REPUBLIC\" \"CHAD\" \"CHILE\" \"CHINA\" \"CHRISTMAS_ISLAND\" \"COCOS_KEELING_ISLANDS\" \"COLOMBIA\" \"COMOROS\" \"CONGO\" \"CONGO_THE_DRC\" \"COOK_ISLANDS\" \"COSTA_RICA\" \"IVORY_COAST\" \"CROATIA\" \"CUBA\" \"CURACAO\" \"CYPRUS\" \"CZECH\" \"DENMARK\" \"DJIBOUTI\" \"DOMINICA\" \"DOMINICAN\" \"EAST_TIMOR\" \"ECUADOR\" \"EGYPT\" \"EL_SALVADOR\" \"EQUATORIAL_GUINEA\" \"ERITREA\" \"ESTONIA\" \"ETHIOPIA\" \"FALKLAND_ISLANDS_MALVINAS\" \"FAEROE_ISLANDS\" \"FIJI\" \"FINLAND\" \"FRANCE\" \"FRANCE_METROPOLITAN\" \"FRENCH_GUIANA\" \"FRENCH_POLYNESIA\" \"FRENCH_SOUTHERN_TERRITORIES\" \"GABON\" \"GAMBIA\" \"GEORGIA\" \"GERMANY\" \"GHANA\" \"GIBRALTAR\" \"GREECE\" \"GREENLAND\" \"GRENADA\" \"GUADELOUPE\" \"GUAM\" \"GUATEMALA\" \"GUINEA\" \"GUINEA_BISSAU\" \"GUYANA\" \"HAITI\" \"HEARD_AND_MC_DONALD_ISLANDS\" \"VATICAN\" \"HONDURAS\" \"HONG_KONG\" \"HUNGARY\" \"ICELAND\" \"INDIA\" \"INDONESIA\" \"IRAN\" \"IRAQ\" \"IRELAND\" \"ISRAEL\" \"ITALY\" \"JAMAICA\" \"JAPAN\" \"JORDAN\" \"KAZAKHSTAN\" \"KENYA\" \"KIRIBATI\" \"KOREA_NORTH\" \"KOREA\" \"KOSOVO\" \"KUWAIT\" \"KYRGYZSTAN\" \"LAOS\" \"LATVIA\" \"LEBANON\" \"LESOTHO\" \"LIBERIA\" \"LIBYA\" \"LIECHTENSTEIN\" \"LITHUANIA\" \"LUXEMBOURG\" \"MACAU\" \"MACAULL\" \"MACEDONIA\" \"MADAGASCAR\" \"MALAWI\" \"MALAYSIA\" \"MALDIVES\" \"MALI\" \"MALTA\" \"MARSHALL_ISLANDS\" \"MARTINIQUE\" \"MAURITANIA\" \"MAURITIUS\" \"MAYOTTE\" \"MEXICO\" \"MICRONESIA_FEDERATED_STATES_OF\" \"MOLDOVA_REPUBLIC_OF\" \"MONACO\" \"MONGOLIA\" \"MONTENEGRO\" \"MONTSERRAT\" \"MOROCCO\" \"MOZAMIBIQUE\" \"MYANMAR_BURMA\" \"NAMIBIA\" \"NAURU\" \"NEPAL\" \"NETHERLANDS\" \"NETHERLANDS_ANTILLES\" \"NEW_CALEDONIA\" \"NEW_ZEALAND\" \"NICARAGUA\" \"NIGER\" \"NIGERIA\" \"NIUE\" \"NORFOLK_ISLAND\" \"NORTHERN_MARIANA_ISLANDS\" \"NORWAY\" \"OMAN\" \"PAKISTAN\" \"PALAU\" \"PANAMA\" \"PAPUA_NEW_GUINEA\" \"PARAGUAY\" \"PERU\" \"PHILIPPINES\" \"PITCAIRN\" \"POLAND\" \"PORTUGAL\" \"PUERTO_RICO\" \"QATAR\" \"REUNION\" \"ROMANIA\" \"RUSSIA\" \"RWANDA\" \"SAINT_KITTS_AND_NEVIS\" \"SAINT_LUCIA\" \"SAINT_MARTIN\" \"SAINT_VINCENT_AND_THE_GRENADINES\" \"SAMOA\" \"SAN_MARINO\" \"SAO_TOME_AND_PRINCIPE\" \"SAUDI_ARABIA\" \"SENEGAL\" \"SERBIA\" \"SERBIA_MONTENEGRO\" \"SEYCHELLES\" \"SIERRA_LEONE\" \"SINGAPORE\" \"SLOVAKIA\" \"SLOVENIA\" \"SOLOMON_ISLANDS\" \"SOMALIA\" \"SOUTH_AFRICA\" \"SOUTH_GEORGIA_AND_SOUTH_SS\" \"SOUTH_SUDAN\" \"SPAIN\" \"SRI_LANKA\" \"ST_HELENA\" \"ST_PIERRE_AND_MIQUELON\" \"SUDAN\" \"SURINAME\" \"SVALBARD_AND_JAN_MAYEN_ISLANDS\" \"SWAZILAND\" \"SWEDEN\" \"SWITZERLAND\" \"SYRIA\" \"TAIWAN\" \"TAJIKISTAN\" \"TANZANIA_UNITED_REPUBLIC_OF\" \"THAILAND\" \"TOGO\" \"TOKELAU\" \"TONGA\" \"TRINIDAD_AND_TOBAGO\" \"TUNISIA\" \"TURKEY\" \"TURKMENISTAN\" \"TURKS_AND_CAICOS_ISLANDS\" \"TUVALU\" \"UGANDA\" \"UKRAINE\" \"UAE\" \"UNITED_KINGDOM\" \"UNITED_STATES\" \"URUGUAY\" \"US_MINOR_ISLANDS\" \"UZBEKISTAN\" \"VANUATU\" \"VENEZUELA\" \"VIETNAM\" \"VIRGIN_ISLANDS_BRITISH\" \"VIRGIN_ISLANDS_US\" \"WALLIS_AND_FUTUNA_ISLANDS\" \"WESTERN_SAHARA\" \"YEMEN\" \"ZAMBIA\" \"ZIMBABWE\" \"DEBUG\" \"DEMO\"\nExample: country=UNITED_STATES\nFilter supported AP hardware platforms based on the country code. AP models that are not certified for this country are omitted from the response.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot a list of access points",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/reboot",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"reboot"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of access points released to ExtremeCloud IQ",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/releasetocloud",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"releasetocloud"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the AFC compliance data for a list of access points",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"serialNumbers\": [\n\"...\",\n\"...\"\n],\n\"custId\": \"...\",\n\"id\": \"...\",\n\"canDelete\": true,\n\"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/afcupdate",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"afcupdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign a list of access points to a site and device group",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"siteId\": {{siteId}},\n  \"deviceGroupId\": {{deviceGroupId}},\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/assign",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set affinity for a list of access points",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"affinity\": \"Primary\",\n  \"affinityOvr\": false,\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/affinity",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"affinity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign a list of access points to a floor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"floorId\": \"{{floorId}}\",\n\"serialNumbers\": [\n\"{{apSerialNumber}}\",\n\"...\"\n]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/assign/floor",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"assign",
								"floor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone access point configuration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/clone?from&to",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"clone"
							],
							"query": [
								{
									"key": "from",
									"value": null,
									"description": "REQUIRED STRING\n ^[[\\\\p{Print}&&[^\\t\\n\\r;:&\\\\p{Cntrl}]]*]{11,11}$\nA non-empty, valid access point serial number from which configurations should be cloned"
								},
								{
									"key": "to",
									"value": null,
									"description": "REQUIRED STRING\n ^[[\\\\p{Print}&&[^\\t\\n\\r;:&\\\\p{Cntrl}]]*]{11,11}$\nA non-empty, valid access point serial number to which configurations should be cloned"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get global access point registration information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/registration",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update global access point registration information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": null,\n  \"canEdit\": null,\n  \"ruOperationMode\": 0,\n  \"dnsRetries\": 3,\n  \"dnsDelay\": 3,\n  \"sshPassword\": \"new2day\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/registration",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update access point state",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/setRuState",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"setRuState"
							],
							"query": [
								{
									"key": "ruState",
									"value": null,
									"description": "string (ruState)\nEnum: \"approved\" \"foreign\" \"pending\" \"r1backgroundscan\" \"r2backgroundscan\" \"released\"\nExample: ruState=approved\nContains RuState value: approved, pending, released, foreign",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade access point software version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/swupgrade",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"swupgrade"
							],
							"query": [
								{
									"key": "swVersion",
									"value": "",
									"description": "string",
									"disabled": true
								},
								{
									"key": "upgradeNoServiceInterruption",
									"value": "true",
									"description": "boolean",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of software image versions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/swversion",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"swversion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update access point software by specific image name",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/upgrade?apImageName=AP5xxx-LEAN-10.5.1.0-031R.img",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"upgrade"
							],
							"query": [
								{
									"key": "apImageName",
									"value": "AP5xxx-LEAN-10.5.1.0-031R.img",
									"description": "string\nA non-empty, valid string containing the software image name to be used for the upgrade"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point upgrade image files",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/upgradeimagelist",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"upgradeimagelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Schedule upgrade for a set of access points",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myDate = new Date(\"July 2, 2023 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", myDate.getTime()/1000.0); //myEpoch is used in the body of this call. This is Epoch time in seconds."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"utcSecondsSinceEpoc\": {{myEpoch}},\n  \"deviceInfo\": {\n    \"property1\": \"{Serial1 : deviceVersion1 , serial2 : deviceVersion2 }\",\n    \"property2\": \"{Serial1 : deviceVersion1 , serial2 : deviceVersion2 }\"\n  },\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/upgradeschedule",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"upgradeschedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get reports that are based on the widget list for all access points",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/report?duration=3H",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"report"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string 3H|3D|14D\nDefault: \"3H\"\nExample: duration=3H"
								},
								{
									"key": "widgetList",
									"value": "",
									"description": "string",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for the AP Smart RF report (/v2/aps/{apSerialNumber}/smartrf)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v2/aps/smartrf/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v2",
								"aps",
								"smartrf",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AP Smart RF stats plus widgets data. (Use /v2/aps/smartrf/widgets to get the available widgets.)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"duration\": \"D_14d\",\n\"widgets\": [\n{}\n],\n\"band\": \"Band5\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v2/aps/{{apSerialNumber}}/smartrf?duration=3H",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v2",
								"aps",
								"{{apSerialNumber}}",
								"smartrf"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string (Duration)\nEnum: \"D_3h\" \"D_3d\" \"D_14d\"\nReport duration"
								},
								{
									"key": "widgetList",
									"value": "",
									"description": "string",
									"disabled": true
								},
								{
									"key": "band",
									"value": null,
									"description": "string (RadioBand)\nEnum: \"Band5\" \"Band6\" \"Band24\" \"BandNONE\"",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for the AP report (/v1/aps/{apSerialNumber}/report)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AP stats plus widgets data (use /v1/aps/report/widgets to get the available widgets)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point by serial number",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update access point configuration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"serialNumber\": \"1740W-2030400000\",\n  \"hardwareType\": \"AP7612-680B30-WR\",\n  \"platformName\": \"AP7612\",\n  \"macAddress\": \"B8:50:01:3B:3E:1C\",\n  \"apName\": \"ap7612-3B3E1C\",\n  \"softwareVersion\": \"5.9.3.2-002R\",\n  \"hostSite\": \"DevelopmentLab7\",\n  \"description\": \"\",\n  \"ethPowerStatus\": null,\n  \"services\": [\n    \"ecaopen\"\n  ],\n  \"features\": [\n    \"802.11AC\"\n  ],\n  \"ipAddress\": \"10.47.75.108\",\n  \"ipNetmask\": \"0.0.0.0\",\n  \"ipGateway\": \"0.0.0.0\",\n  \"radios\": [\n    {\n      \"radioIndex\": 1,\n      \"mode\": \"gn\",\n      \"adminState\": true,\n      \"aggregateMpdu\": \"enabled\",\n      \"txBf\": \"disabled\",\n      \"stbc\": \"enabled\",\n      \"mbr\": \"6\",\n      \"dtim\": 5,\n      \"dot11gPM\": \"None\",\n      \"aggMsdu\": false,\n      \"aggMpduSF\": 30,\n      \"addba\": true,\n      \"probeSuppRssTh\": -90,\n      \"probeSuppOnLowRss\": false,\n      \"deasscOnLowRss\": false,\n      \"adminStateOvr\": false,\n      \"mbrOvr\": false,\n      \"dtimOvr\": false,\n      \"dot11gPMOvr\": false,\n      \"aggMsduOvr\": false,\n      \"aggMpduOvr\": false,\n      \"aggMpduSFOvr\": false,\n      \"addbaOvr\": false,\n      \"ldpcOvr\": false,\n      \"txbfOvr\": false,\n      \"stbcOvr\": false,\n      \"probeSuppRssThOvr\": false,\n      \"probeSuppOnLowRssOvr\": false,\n      \"deasscOnLowRssOvr\": false,\n      \"channelwidth\": \"Ch1Width_20MHz\",\n      \"useSmartRf\": true,\n      \"txMaxPower\": 18,\n      \"channel\": \"6\",\n      \"attenuation\": 0,\n      \"id\": null,\n      \"canDelete\": null,\n      \"custId\": null,\n      \"ldpcEnabled\": \"enabled\",\n      \"canEdit\": null\n    }\n  ],\n  \"ledStatus\": \"NORMAL\",\n  \"ledStatusOvr\": false,\n  \"supportedCountries\": [\n    \"AFGHANISTAN\"\n  ],\n  \"location\": \"DevelopmentLab7\",\n  \"environment\": \"indoor\",\n  \"maintainClientSession\": \"disabled\",\n  \"apPersistence\": \"disabled\",\n  \"captureTimeout\": 0,\n  \"mcastAssembly\": false,\n  \"home\": \"LOCAL\",\n  \"approvedStatus\": \"APPROVED\",\n  \"addrAssn\": true,\n  \"apAntennaModels\": null,\n  \"iotiBeaconMajor\": 0,\n  \"iotiBeaconMinor\": 0,\n  \"iotAntennaModelId\": -1,\n  \"mgmtVlanId\": 1,\n  \"mgmtVlanIdOvr\": true,\n  \"mtuOvr\": true,\n  \"mtu\": 1498,\n  \"iotEnabled\": false,\n  \"iotAppId\": \"iBeaconAdvertisement\",\n  \"lag\": false,\n  \"lagOvr\": false,\n  \"ge2mode\": \"Backup\",\n  \"ge2modeOvr\": false,\n  \"usbPower\": \"Off\",\n  \"usbPowerOvr\": false,\n  \"psePower\": \"Off\",\n  \"psePowerOvr\": false,\n  \"forcePoEPlus\": false,\n  \"rfMgmtPolicyId\": \"4775b87e-ef12-44bf-9018-0b597b0f3911\",\n  \"iotiBeaconMajorOvr\": false,\n  \"iotiBeaconMinorOvr\": false,\n  \"iotEddistoneUrl\": \"\",\n  \"iotEddistoneUrlOvr\": false,\n  \"bcastForDisassoc\": false,\n  \"lldpEnabled\": true,\n  \"acList\": [],\n  \"ethMode\": \"ETH_DUPLEX_TYPE_FULL\",\n  \"ethSpeed\": \"speedAuto\",\n  \"rootPassword\": null,\n  \"autoTxPowerMin\": true,\n  \"lbsEnabled\": true,\n  \"iotMeasuredRssi\": 0,\n  \"iotMeasuredRssiOverride\": false,\n  \"proxied\": \"Local\",\n  \"hostname\": \"AP510-1234567890123456\",\n  \"meshpoints\": [],\n  \"bandPreference\": false,\n  \"roleIDs\": [\n    \"bd9d7042-f0c7-11e7-8c3f-9a214cf093aa\"\n  ],\n  \"radioIfList\": [\n    {\n      \"serviceId\": \"bd9d7042-f0c7-11e7-8c3f-9a214cf093aa\",\n      \"index\": 1\n    }\n  ],\n  \"bandSteeringServiceIds\": [\n    \"bd9d7042-f0c7-11e7-8c3f-9a214cf093aa\"\n  ],\n  \"radioIfListOvr\": false,\n  \"cbUser\": \"client\",\n  \"cbPassword\": null,\n  \"faAuthKey\": \"testkeyvalue123\",\n  \"faAuthKeyOvr\": true,\n  \"edge\": true,\n  \"edgeOvr\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete access point by serial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point antenna information by serial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/antenna/{{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"antenna",
								"{{apSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trace file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/downloadtrace/{{traceFileName}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"downloadtrace",
								"{{traceFileName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy access point configuation to the default configuation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/copytodefault",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"copytodefault"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable access point logs download",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/logs",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"logs"
							],
							"query": [
								{
									"key": "deleteAction",
									"value": "",
									"description": "boolean",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable access point real-time capture",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/realcapture",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"realcapture"
							],
							"query": [
								{
									"key": "timeout",
									"value": "",
									"description": "integer <int32>",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot access point by serial number",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/reboot",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"reboot"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable access point reset during next check-in",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/reset",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update access point state by serial number",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/setRuState",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"setRuState"
							],
							"query": [
								{
									"key": "ruState",
									"value": "",
									"description": "string (ruState)\nEnum: \"approved\" \"foreign\" \"pending\" \"r1backgroundscan\" \"r2backgroundscan\" \"released\"\nExample: ruState=approved\nContains RuState value: approved, pending, released, foreign",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point traces download URL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/traceurls",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"traceurls"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade access point software by AP image version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/upgrade?apImageName=AP5xxx-LEAN-10.5.1.0-031R.img",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"upgrade"
							],
							"query": [
								{
									"key": "apImageName",
									"value": "AP5xxx-LEAN-10.5.1.0-031R.img",
									"description": "string\nA non-empty, valid string containing the image name to be used for the upgrade"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point stations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/stations",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point supported environments",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/environment/{{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"environment",
								"{{apSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of station locations for an AP by serial number",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/location?duration=3H",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"location"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string 3H|3D|14D\nDefault: \"3H\"\nExample: duration=3H"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point lldp info per port",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/lldp",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"lldp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AP alarms list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{apSerialNumber}}/alarms?startTime={{myStartTime}}&endTime={{myEndTime}}&categories",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{apSerialNumber}}",
								"alarms"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "Start time in milliseconds"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "End time in milliseconds"
								},
								{
									"key": "categories",
									"value": null,
									"description": "string (ApAlarmCategory)\nEnum: \"Certificate\" \"ChannelChange\" \"ChannelUtilization\" \"ConfigurationChange\" \"ConfigurationFailure\" \"PollMonitor\" \"CrashReport\" \"ClientInfo\" \"Edge\" \"Ethernet\" \"Discovery\" \"DCS\" \"AlarmCleared\" \"Noise\" \"Radar\" \"Reboot\" \"Reset\" \"Upgrade\" \"Miscellaneous\" \"FabricAttach\" \"StatusChange\" \"SmartRF\" \"Unknown\"\nExample: categories=Certificate\nCategories list to retrieve. Returns all categories, if empty"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AP alarms list - Site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/{{siteId}}/alarms?startTime={{myStartTime}}&endTime={{myEndTime}}&categories",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"{{siteId}}",
								"alarms"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "Start time in milliseconds"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "End time in milliseconds"
								},
								{
									"key": "categories",
									"value": null,
									"description": "string (ApAlarmCategory)\nEnum: \"Certificate\" \"ChannelChange\" \"ChannelUtilization\" \"ConfigurationChange\" \"ConfigurationFailure\" \"PollMonitor\" \"CrashReport\" \"ClientInfo\" \"Edge\" \"Ethernet\" \"Discovery\" \"DCS\" \"AlarmCleared\" \"Noise\" \"Radar\" \"Reboot\" \"Reset\" \"Upgrade\" \"Miscellaneous\" \"FabricAttach\" \"StatusChange\" \"SmartRF\" \"Unknown\"\nExample: categories=Certificate\nCategories list to retrieve. Returns all categories, if empty"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get site Smart RF stats plus widget data. (Use /v4/sites/smartrf/widgets to get available widgets)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/sites/{{siteId}}/smartrf",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"sites",
								"{{siteId}}",
								"smartrf"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string (Duration)\nEnum: \"D_3h\" \"D_3d\" \"D_14d\"\nReport duration",
									"disabled": true
								},
								{
									"key": "widgets",
									"value": null,
									"description": "Array of objects (WidgetInfoElement)",
									"disabled": true
								},
								{
									"key": "band",
									"value": null,
									"description": "string (RadioBand)\nEnum: \"Band5\" \"Band6\" \"Band24\" \"BandNONE\"",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get reports that are based on the widgetList for all access points in a site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/sites/{{siteId}}/aps/report?duration=3H",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"sites",
								"{{siteId}}",
								"aps",
								"report"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string 3H|3D|14D\nDefault: \"3H\"\nExample: duration=3H"
								},
								{
									"key": "widgetList",
									"value": null,
									"description": "string",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set AP log level for a list of access points",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apLogLevel\": \"Critical\",\n  \"apLogLevelOvr\": false,\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/aploglevel",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"aploglevel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve AFC related access point information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/afc/query",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"afc",
								"query"
							],
							"query": [
								{
									"key": "siteName",
									"value": null,
									"description": "A non-empty, valid site name",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Return the columns list for /v1/aps/afc/query",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/afc/query/columns",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"afc",
								"query",
								"columns"
							],
							"query": [
								{
									"key": "suggestValues",
									"value": "",
									"description": "boolean\nDefault: true\nScan for suggested values for columns.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ConcentratorManager",
			"item": [
				{
					"name": "Get list of GRE / IPSec concentrators",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create concentrator instance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"secure\": true,\n  \"ikev2Psk\": \"stringst\",\n  \"terminationAddr\": \"192.168.0.1\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get concentrator by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators/{{concentratorId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators",
								"{{concentratorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update concentrator configuration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"secure\": true,\n  \"ikev2Psk\": \"stringst\",\n  \"terminationAddr\": \"192.168.0.1\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators/{{concentratorId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators",
								"{{concentratorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete concentrator by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators/{{concentratorId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators",
								"{{concentratorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get concentrator with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get concentrator name to ID map",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard concentrator instance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumber\": \"1730Y-1007800000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/concentrators/onboard",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"concentrators",
								"onboard"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AdministratorManager",
			"item": [
				{
					"name": "Get a list of administrators for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/administrators",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"administrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an administrator for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"admin\",\n  \"adminRole\": \"FULL\",\n  \"enabled\": false,\n  \"accountState\": \"ENABLED\",\n  \"scopes\": {\n    \"site\": \"RO\",\n    \"network\": \"RW\",\n    \"deviceAp\": \"NA\",\n    \"deviceSwitch\": \"RO\",\n    \"eGuest\": \"RO\",\n    \"adoption\": \"RO\",\n    \"troubleshoot\": \"RO\",\n    \"onboardAaa\": \"RO\",\n    \"onboardCp\": \"RO\",\n    \"onboardGroupsAndRules\": \"RO\",\n    \"onboardGuestCp\": \"RO\",\n    \"platform\": \"RO\",\n    \"account\": \"RO\",\n    \"application\": \"RO\",\n    \"license\": \"RO\",\n    \"cliSupport\": \"RW\"\n  },\n  \"properties\": {\n    \"showWizard\": \"false\",\n    \"theme\": \"\\\"light\\\"\"\n  },\n  \"idleTimeout\": 604800\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/administrators",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"administrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change an administrator's password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": {{userId}},\n  \"password\": \"adminPassword\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/administrators/adminpassword",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"administrators",
								"adminpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an administrator by user ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/administrators/{{userId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"administrators",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an administrator for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"newUserId\",\n  \"adminRole\": \"FULL\",\n  \"securityQuestion\": \"Admin secutiry question\",\n  \"accountState\": \"ENABLED\",\n  \"idleTimeout\": 12345,\n  \"scopes\": {\n    \"site\": \"RO\",\n    \"network\": \"RW\",\n    \"deviceAp\": \"NA\",\n    \"deviceSwitch\": \"RO\",\n    \"eGuest\": \"RO\",\n    \"adoption\": \"RO\",\n    \"troubleshoot\": \"RO\",\n    \"onboardAaa\": \"RO\",\n    \"onboardCp\": \"RO\",\n    \"onboardGroupsAndRules\": \"RO\",\n    \"onboardGuestCp\": \"RO\",\n    \"platform\": \"RO\",\n    \"account\": \"RO\",\n    \"application\": \"RO\",\n    \"license\": \"RO\",\n    \"cliSupport\": \"RW\"\n  },\n  \"properties\": {\n    \"property1\": \"...\",\n    \"property2\": \"...\"\n  },\n  \"custId\": \"...\",\n  \"id\": \"...\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/administrators/{{userId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"administrators",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an administrator for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/administrators/{{userId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"administrators",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an administrator timeout by user ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": {{userid}},\n  \"idleTimeout\": 12345,\n  \"custId\": \"...\",\n  \"id\": \"...\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/administratorsTimeout/{{userId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"administratorsTimeout",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send a refresh token and obtain a new OAuth 2 access token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"grantType\": \"refresh_token\",\n  \"refreshToken\": \"refreshToken\",\n  \"scope\": \"...\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/oauth2/refreshToken",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"oauth2",
								"refreshToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain an access token using Oauth2 authorization grant type:password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"access_token\", jsonData['access_token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"grantType\": \"password\",\n  \"userId\": {{userId}},\n  \"password\": {{password}},\n  \"scope\": \"...\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/oauth2/token",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an access token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/oauth2/token/{{access_token}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"oauth2",
								"token",
								"{{access_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validates OAuth2 access token. Please refer to (https://tools.ietf.org/html/rfc7662) for more details.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "",
									"description": "REQUIRED STRING\nContains access token information for the user who is requesting external rest endpoints. Two types of tokens are present: a fixed access token that is generally used by ExtremeCloud components, and a dynamic access token that is used by a user accessing information from the ExtremeCloud IQ Controller GUI applications.",
									"type": "text"
								},
								{
									"key": "tokenTypeHint",
									"value": "",
									"description": "REQUIRED STRING\nContains token type hint information. Example: ExtremeAI",
									"type": "text"
								},
								{
									"key": "requestUrl",
									"value": "",
									"description": "REQUIRED STRING\nContains rest endpoint information. Example: https://extrportal.test.online.extremenetworks.com/integration/8.0/customerSite/byExternalIds?externalCustomerId=Tenant-1&externalLocationId=Site-1",
									"type": "text"
								},
								{
									"key": "requestMethod",
									"value": "",
									"description": "REQUIRED STRING\nContains one http verb (GET, POST, PUT, DELETE) Example: GET",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/oauth2/introspecttoken",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"oauth2",
								"introspecttoken"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AdspManager",
			"item": [
				{
					"name": "Get list of all Air Defense profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/airdefense",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"airdefense"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new Air Defense profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"ADSP Container\",\n  \"servers\": [\n    {\n      \"addr\": \"10.234.156.248\",\n      \"port\": 443\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/airdefense",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"airdefense"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Air Defense profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/airdefense/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"airdefense",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AirDefense profile name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/airdefense/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"airdefense",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an AirDefense Profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/airdefense/{{adspId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"airdefense",
								"{{adspId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an AirDefense profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"{{adspId}}\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"ADSP Container\",\n  \"servers\": [\n    {\n      \"addr\": \"10.234.156.248\",\n      \"port\": 443\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/airdefense/{{adspId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"airdefense",
								"{{adspId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an AirDefense profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/airdefense/{{adspId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"airdefense",
								"{{adspId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AnalyticsProfileManager",
			"item": [
				{
					"name": "Get list of all analytics profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/analytics",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"analytics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new Analytics Element",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"string\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"test\",\n  \"destAddr\": \"11.12.12.3\",\n  \"reportFreq\": 73\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/analytics",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"analytics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Analytics profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/analytics/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"analytics",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Analytics profile name to ID map",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/analytics/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"analytics",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Analytics profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/analytics/{{analyticsProfileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"analytics",
								"{{analyticsProfileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an Analytics profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"{{analyticsProfileId}}\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"test\",\n  \"destAddr\": \"11.12.12.3\",\n  \"reportFreq\": 73\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/analytics/{{analyticsProfileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"analytics",
								"{{analyticsProfileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Analytics profile for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/analytics/{{analyticsProfileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"analytics",
								"{{analyticsProfileId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AuditlogManager",
			"item": [
				{
					"name": "Get audit logs for a customer for a given time range",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/auditlogs?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"auditlogs"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "number >= 1\nStart time in milliseconds"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "number >= 1\nEnd time in milliseconds"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CoSManager",
			"item": [
				{
					"name": "CoS Manager",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/cos",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"cos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new policy Class of Service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"cosName\": \"Role_46_COS\",\n  \"cosQos\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"priority\": \"notApplicable\",\n    \"tosDscp\": 0,\n    \"mask\": 0,\n    \"useLegacyMarking\": null\n  },\n  \"inboundRateLimiterId\": \"string\",\n  \"outboundRateLimiterId\": \"string\",\n  \"transmitQueue\": 0,\n  \"predefined\": false\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/cos",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"cos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the default Class of Service configuration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/cos/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"cos",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CoS name to ID map",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/cos/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"cos",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a policy CoS by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/cos/{{cosId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"cos",
								"{{cosId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a policy CoS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"{{cosId}}\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"cosName\": \"Role_46_COS\",\n  \"cosQos\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"priority\": \"notApplicable\",\n    \"tosDscp\": 0,\n    \"mask\": 0,\n    \"useLegacyMarking\": null\n  },\n  \"inboundRateLimiterId\": \"string\",\n  \"outboundRateLimiterId\": \"string\",\n  \"transmitQueue\": 0,\n  \"predefined\": false\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/cos/{{cosId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"cos",
								"{{cosId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a CoS for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/cos/{{cosId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"cos",
								"{{cosId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DeviceImageManager",
			"item": [
				{
					"name": "Get list of device images for a hardware type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/deviceimages/{{hwType}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"deviceimages",
								"{{hwType}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DpiSignatureManager",
			"item": [
				{
					"name": "Get list of all Dpi signature profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/dpisignatures",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"dpisignatures"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save list of Dpi Application elements",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dpiAppElements\": [\n    {\n      \"appId\": 12345,\n      \"appGroupId\": 12345,\n      \"appDisplayId\": 12345,\n      \"appName\": \"...\",\n      \"pattern\": \"...\",\n      \"predefined\": true,\n      \"ipoque\": true,\n      \"custId\": \"...\",\n      \"id\": \"...\",\n      \"canDelete\": true,\n      \"canEdit\": true\n    },\n    {\n      \"appId\": 12345,\n      \"appGroupId\": 12345,\n      \"appDisplayId\": 12345,\n      \"appName\": \"...\",\n      \"pattern\": \"...\",\n      \"predefined\": true,\n      \"ipoque\": true,\n      \"custId\": \"...\",\n      \"id\": \"...\",\n      \"canDelete\": true,\n      \"canEdit\": true\n    }\n  ],\n  \"custId\": \"...\",\n  \"id\": \"...\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/dpisignatures",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"dpisignatures"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of all custom Dpi signature profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/dpisignatures/custom",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"dpisignatures",
								"custom"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EntityStateManager",
			"item": [
				{
					"name": "Get the state of all sites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/state/sites",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"state",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the state of all switches",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/state/switches",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"state",
								"switches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the state of an access point based on serial number",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/state/aps/{{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"state",
								"aps",
								"{{apSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the state of a site based on ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/state/sites/{{siteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"state",
								"sites",
								"{{siteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the state of a switch based on serial number",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/state/switches/{{switchSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"state",
								"switches",
								"{{switchSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the FCC AFC Server status with a site domain query option",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/state/afc/server",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"state",
								"afc",
								"server"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the FCC AFC Server status for all locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/state/afc/server/all",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"state",
								"afc",
								"server",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EslProfileManager",
			"item": [
				{
					"name": "Get list of all ESL profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/eslprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"eslprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new ESL profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"6a87317e-687e-11ee-a487-000c29a71485\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"ESL1\",\n  \"port\": 123,\n  \"fqdn\": \"www.testserv.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/eslprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"eslprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ESL profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/eslprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"eslprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Esl profile name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/eslprofile/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"eslprofile",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ESL profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/eslprofile/{{eslProfileID}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"eslprofile",
								"{{eslProfileID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an ESL profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"6a87317e-687e-11ee-a487-000c29a71485\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"ESL1\",\n  \"port\": 123,\n  \"fqdn\": \"www.testserv.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/eslprofile/{{eslProfileID}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"eslprofile",
								"{{eslProfileID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an ESL profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/eslprofile/{{eslProfileID}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"eslprofile",
								"{{eslProfileID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IotProfileManager",
			"item": [
				{
					"name": "Get list of all IoT profiles for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/iotprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"iotprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new IoT profile to the customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"custId\": null,\n\"id\": \"00000000-0000-0000-0000-000000000000\",\n\"canDelete\": true,\n\"canEdit\": true,\n\"name\": \"\",\n\"appId\": \"iBeaconAdvertisement\",\n\"iBeaconAdvertisement\": {\n\"interval\": 100,\n\"major\": 0,\n\"minor\": 0,\n\"uuid\": \"00000000-0000-0000-0000-000000000000\",\n\"measuredRssi\": -47\n},\n\"iBeaconScan\": {\n\"destAddr\": \"0.0.0.0\",\n\"destPort\": 0,\n\"interval\": 100,\n\"window\": 100,\n\"minRSS\": -100,\n\"uuid\": \"00000000-0000-0000-0000-000000000000\"\n},\n\"threadGateway\": {\n\"shortPANId\": \"5964\",\n\"extPANId\": \"726991727DD89911\",\n\"masterKey\": \"F3AB92FDE5758495111177870437E1C3\",\n\"networkName\": \"\",\n\"commCredentials\": \"THREADNETWORK\",\n\"channel\": 25,\n\"whiteList\": [ ]\n},\n\"eddystoneAdvertisement\": {\n\"url\": \"\",\n\"interval\": 100,\n\"measuredRssi\": -5\n},\n\"eddystoneScan\": {\n\"destAddr\": \"0.0.0.0\",\n\"destPort\": 0,\n\"interval\": 100,\n\"window\": 100,\n\"minRSS\": -100\n},\n\"genericScan\": {\n\"destAddr\": \"8.8.8.8\",\n\"destPort\": 12345,\n\"interval\": 10240,\n\"window\": 10240,\n\"minRSS\": -60,\n\"companyId\": 0\n},\n\"app_supported\": \"SINGLE\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/iotprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"iotprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an IoT profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/iotprofile/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"iotprofile",
								"default"
							],
							"query": [
								{
									"key": "app_supported",
									"value": null,
									"description": "string (IotApplicationSupported)\nDefault: \"SINGLE\"\nEnum: \"SINGLE\" \"MULTI\"\nIf app_supported is present, response includes IoT profile with default values matching the app_supported (SINGLE or MULTI). If app_supported is not provided, then IoT profile of type SINGLE with default values are returned.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IoT profile name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/iotprofile/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"iotprofile",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an IoT profile based on ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/iotprofile/{{iotprofileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"iotprofile",
								"{{iotprofileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an IoT profile based on ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"\",\n  \"appId\": \"iBeaconAdvertisement\",\n  \"iBeaconAdvertisement\": {\n    \"interval\": 100,\n    \"major\": 0,\n    \"minor\": 0,\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"measuredRssi\": -47\n  },\n  \"iBeaconScan\": {\n    \"destAddr\": \"0.0.0.0\",\n    \"destPort\": 0,\n    \"interval\": 100,\n    \"window\": 100,\n    \"minRSS\": -100,\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"threadGateway\": {\n    \"shortPANId\": \"5964\",\n    \"extPANId\": \"726991727DD89911\",\n    \"masterKey\": \"F3AB92FDE5758495111177870437E1C3\",\n    \"networkName\": \"\",\n    \"commCredentials\": \"THREADNETWORK\",\n    \"channel\": 25,\n    \"whiteList\": []\n  },\n  \"eddystoneAdvertisement\": {\n    \"url\": \"\",\n    \"interval\": 100,\n    \"measuredRssi\": -5\n  },\n  \"eddystoneScan\": {\n    \"destAddr\": \"0.0.0.0\",\n    \"destPort\": 0,\n    \"interval\": 100,\n    \"window\": 100,\n    \"minRSS\": -100\n  },\n  \"genericScan\": {\n    \"destAddr\": \"8.8.8.8\",\n    \"destPort\": 12345,\n    \"interval\": 10240,\n    \"window\": 10240,\n    \"minRSS\": -60,\n    \"companyId\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/iotprofile/{{iotprofileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"iotprofile",
								"{{iotprofileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an IoT profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/iotprofile/{{iotprofileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"iotprofile",
								"{{iotprofileId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RtlsProfileManager",
			"item": [
				{
					"name": "Get list of all RTLS profiles for a customer.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/rtlsprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"rtlsprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new RTLS profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"e0550435-724a-4876-b40b-14a794b07c1b\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"Locator1\",\n  \"appId\": \"AeroScout\",\n  \"aeroScout\": {\n    \"ip\": \"192.168.4.5\",\n    \"port\": 12092,\n    \"mcast\": \"01:18:8E:00:00:00\"\n  },\n  \"ekahau\": null,\n  \"centrak\": null,\n  \"sonitor\": null\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/rtlsprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"rtlsprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RTLS profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/rtlsprofile/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"rtlsprofile",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RTLS profile name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/rtlsprofile/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"rtlsprofile",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RTLS profile by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/rtlsprofile/{{rtlsprofileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"rtlsprofile",
								"{{rtlsprofileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RTLS profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"{{rtlsprofileId}}\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"Locator1\",\n  \"appId\": \"AeroScout\",\n  \"aeroScout\": {\n    \"ip\": \"192.168.4.5\",\n    \"port\": 12092,\n    \"mcast\": \"01:18:8E:00:00:00\"\n  },\n  \"ekahau\": null,\n  \"centrak\": null,\n  \"sonitor\": null\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/rtlsprofile/{{rtlsprofileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"rtlsprofile",
								"{{rtlsprofileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RTLS profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/rtlsprofile/{{rtlsprofileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"rtlsprofile",
								"{{rtlsprofileId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NotificationManager",
			"item": [
				{
					"name": "Get list of all notification",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/notifications",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of notifications for a region",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/notifications/regional",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"notifications",
								"regional"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PositioningManager",
			"item": [
				{
					"name": "Get list of all Positioning profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/positioning",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"positioning"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new Positioning profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"a4000be9-bb08-4366-9dee-9e09cf2380a3\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"Thornhill56959\",\n  \"collection\": \"AllClients\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/positioning",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"positioning"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Positioning profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/positioning/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"positioning",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Positioning profile name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/positioning/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"positioning",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Positioning profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/positioning/{{positioningProfileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"positioning",
								"{{positioningProfileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Positioning profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"{{positioningProfileId}}\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"Thornhill56959\",\n  \"collection\": \"AllClients\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/positioning/{{positioningProfileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"positioning",
								"{{positioningProfileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Positioning profile for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/positioning/{{positioningProfileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"positioning",
								"{{positioningProfileId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ProfileManager",
			"item": [
				{
					"name": "Get list of all profiles for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"41f88f5a-f0c0-11e7-8c3f-9a214cf09306\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"AP3912-default\",\n  \"apPlatform\": \"AP3912\",\n  \"roleIDs\": [\n    \"4459ee6c-2f76-11e7-93ae-92361f002671\"\n  ],\n  \"radioIfList\": [\n    {\n      \"serviceId\": \"804078cd-1b76-48f4-a70f-d01f07c75c47\",\n      \"index\": 1\n    }\n  ],\n  \"bandSteeringServiceIds\": [\n    \"804078cd-1b76-48f4-a70f-d01f07c75c47\"\n  ],\n  \"wiredIfList\": [\n    {\n      \"serviceId\": \"9cfd5161-79b0-4c87-be1c-5568bbf3c44a\",\n      \"index\": 1\n    }\n  ],\n  \"meshpointIfList\": [\n    {\n      \"meshpointId\": \"804078cd-1b76-48f4-a70f-d01f07c75c88\",\n      \"index\": 1\n    }\n  ],\n  \"usePolicyZoneName\": false,\n  \"secureTunnelMode\": \"controlData\",\n  \"secureTunnelLifetime\": 0,\n  \"secureTunnelAp\": false,\n  \"bandPreference\": false,\n  \"sessionPersistence\": false,\n  \"sshEnabled\": true,\n  \"airDefenseProfileId\": \"5c9005a8-18bf-44f8-803b-30c09c1cfebe\",\n  \"iotProfileId\": \"998be9ac-6ed7-45f2-aa47-3254ea8dacb6\",\n  \"rtlsProfileId\": \"e0550435-724a-4876-b40b-14a794b07c1b\",\n  \"mtu\": 1500,\n  \"positioningProfileId\": \"42d13c51-4d9c-41da-874d-60e4f832d894\",\n  \"mgmtVlanId\": 1,\n  \"mgmtVlanTagged\": false,\n  \"lag\": false,\n  \"ge2mode\": \"Backup\",\n  \"usbPower\": \"Off\",\n  \"psePower\": \"Off\",\n  \"radios\": [\n    {\n      \"radioIndex\": 1,\n      \"mode\": \"anc\",\n      \"adminState\": true,\n      \"aggregateMpdu\": \"enabled\",\n      \"txBf\": \"muMimo\",\n      \"stbc\": false,\n      \"ldpc\": true,\n      \"mbr\": \"6\",\n      \"dtim\": 5,\n      \"dot11gPM\": \"None\",\n      \"aggMsdu\": false,\n      \"aggMpduSF\": 30,\n      \"addba\": true,\n      \"probeSuppRssTh\": -90,\n      \"probeSuppOnLowRss\": false,\n      \"deasscOnLowRss\": false,\n      \"radioName\": \"Radio 1 - 5GHz\",\n      \"supportedModes\": [\n        \"sensor\"\n      ],\n      \"radioShare\": \"inline\",\n      \"ocsChList\": [],\n      \"ocsInterval\": 20,\n      \"ofdma\": \"Both\",\n      \"bsscolor\": 0,\n      \"twt\": true,\n      \"mc2uc\": \"Auto\"\n    }\n  ],\n  \"apLogLevel\": \"Informational\",\n  \"iotList\": [],\n  \"analyticsProfileId\": \"c37ec03c-7470-43c5-84bd-2f00ec3c17bf\",\n  \"features\": [\n    \"802.11AC\"\n  ],\n  \"wiredPorts\": [\n    {\n      \"portIndex\": 0,\n      \"portName\": \"Uplink\",\n      \"ethMode\": \"ETH_DUPLEX_TYPE_FULL\",\n      \"ethSpeed\": \"speedAuto\"\n    }\n  ],\n  \"sensorChList\": [],\n  \"sensorMode\": \"Default\",\n  \"clientBalancing\": false,\n  \"meshpoints\": [\n    {\n      \"meshpointId\": \"804078cd-1b76-48f4-a70f-d01f07c75c88\",\n      \"pathSelectionMethod\": \"Uniform\",\n      \"monitorCrm\": false,\n      \"monitorPrimaryLink\": false,\n      \"preferredNeighbor\": null,\n      \"preferredRoot\": null,\n      \"preferredBand\": \"BandNONE\",\n      \"hysteresisMinTh\": -60,\n      \"hysteresisPeriod\": 10,\n      \"hysteresisDelta\": 5,\n      \"hysteresisSNRDelta\": 22,\n      \"excludeWiredPeer\": false,\n      \"costRoot\": false,\n      \"rootSelectionMethod\": \"None\"\n    }\n  ],\n  \"ledStatus\": \"NORMAL\",\n  \"faAuthKey\": \"testkeyvalue123\",\n  \"edge\": false\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"apPlatform\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone a profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles/{{profileId}}/clone",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles",
								"{{profileId}}",
								"clone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profile names mapped to IDs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a profile by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles/{{profileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles",
								"{{profileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a profile by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"41f88f5a-f0c0-11e7-8c3f-9a214cf09306\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"AP3912-default\",\n  \"apPlatform\": \"AP3912\",\n  \"roleIDs\": [\n    \"4459ee6c-2f76-11e7-93ae-92361f002671\"\n  ],\n  \"radioIfList\": [\n    {\n      \"serviceId\": \"804078cd-1b76-48f4-a70f-d01f07c75c47\",\n      \"index\": 1\n    }\n  ],\n  \"bandSteeringServiceIds\": [\n    \"804078cd-1b76-48f4-a70f-d01f07c75c47\"\n  ],\n  \"wiredIfList\": [\n    {\n      \"serviceId\": \"9cfd5161-79b0-4c87-be1c-5568bbf3c44a\",\n      \"index\": 1\n    }\n  ],\n  \"meshpointIfList\": [\n    {\n      \"meshpointId\": \"804078cd-1b76-48f4-a70f-d01f07c75c88\",\n      \"index\": 1\n    }\n  ],\n  \"usePolicyZoneName\": false,\n  \"secureTunnelMode\": \"controlData\",\n  \"secureTunnelLifetime\": 0,\n  \"secureTunnelAp\": false,\n  \"bandPreference\": false,\n  \"sessionPersistence\": false,\n  \"sshEnabled\": true,\n  \"airDefenseProfileId\": \"5c9005a8-18bf-44f8-803b-30c09c1cfebe\",\n  \"iotProfileId\": \"998be9ac-6ed7-45f2-aa47-3254ea8dacb6\",\n  \"rtlsProfileId\": \"e0550435-724a-4876-b40b-14a794b07c1b\",\n  \"mtu\": 1500,\n  \"positioningProfileId\": \"42d13c51-4d9c-41da-874d-60e4f832d894\",\n  \"mgmtVlanId\": 1,\n  \"mgmtVlanTagged\": false,\n  \"lag\": false,\n  \"ge2mode\": \"Backup\",\n  \"usbPower\": \"Off\",\n  \"psePower\": \"Off\",\n  \"radios\": [\n    {\n      \"radioIndex\": 1,\n      \"mode\": \"anc\",\n      \"adminState\": true,\n      \"aggregateMpdu\": \"enabled\",\n      \"txBf\": \"muMimo\",\n      \"stbc\": false,\n      \"ldpc\": true,\n      \"mbr\": \"6\",\n      \"dtim\": 5,\n      \"dot11gPM\": \"None\",\n      \"aggMsdu\": false,\n      \"aggMpduSF\": 30,\n      \"addba\": true,\n      \"probeSuppRssTh\": -90,\n      \"probeSuppOnLowRss\": false,\n      \"deasscOnLowRss\": false,\n      \"radioName\": \"Radio 1 - 5GHz\",\n      \"supportedModes\": [\n        \"sensor\"\n      ],\n      \"radioShare\": \"inline\",\n      \"ocsChList\": [],\n      \"ocsInterval\": 20,\n      \"ofdma\": \"Both\",\n      \"bsscolor\": 0,\n      \"twt\": true,\n      \"mc2uc\": \"Auto\"\n    }\n  ],\n  \"apLogLevel\": \"Informational\",\n  \"iotList\": [],\n  \"analyticsProfileId\": \"c37ec03c-7470-43c5-84bd-2f00ec3c17bf\",\n  \"features\": [\n    \"802.11AC\"\n  ],\n  \"wiredPorts\": [\n    {\n      \"portIndex\": 0,\n      \"portName\": \"Uplink\",\n      \"ethMode\": \"ETH_DUPLEX_TYPE_FULL\",\n      \"ethSpeed\": \"speedAuto\"\n    }\n  ],\n  \"sensorChList\": [],\n  \"sensorMode\": \"Default\",\n  \"clientBalancing\": false,\n  \"meshpoints\": [\n    {\n      \"meshpointId\": \"804078cd-1b76-48f4-a70f-d01f07c75c88\",\n      \"pathSelectionMethod\": \"Uniform\",\n      \"monitorCrm\": false,\n      \"monitorPrimaryLink\": false,\n      \"preferredNeighbor\": null,\n      \"preferredRoot\": null,\n      \"preferredBand\": \"BandNONE\",\n      \"hysteresisMinTh\": -60,\n      \"hysteresisPeriod\": 10,\n      \"hysteresisDelta\": 5,\n      \"hysteresisSNRDelta\": 22,\n      \"excludeWiredPeer\": false,\n      \"costRoot\": false,\n      \"rootSelectionMethod\": \"None\"\n    }\n  ],\n  \"ledStatus\": \"NORMAL\",\n  \"faAuthKey\": \"testkeyvalue123\",\n  \"edge\": false\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles/{{profileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles",
								"{{profileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a profile by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles/{{profileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles",
								"{{profileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of channels supported by profile radios",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles/{{profileId}}/channels?radioMode=bgn",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles",
								"{{profileId}}",
								"channels"
							],
							"query": [
								{
									"key": "radioMode",
									"value": "bgn",
									"description": "string (RadioMode)\nEnum: \"sensor\" \"b\" \"g\" \"bg\" \"gn\" \"bgn\" \"gnstrict\" \"gnx\" \"a\" \"an\" \"anstrict\" \"anc\" \"acstrict\" \"ancx\" \"ax6\" \"bridge\"\nExample: radioMode=sensor\nRadio modes of profile radios. The first mode corresponds to radio1, the second mode corresponds to radio2, etc. Example: .../channels?radioMode=anc,gn"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service IDs that are assigned to the primary BSSID. Removing these services may cause a radio reset.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/profiles/{{profileId}}/bssid0",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"profiles",
								"{{profileId}}",
								"bssid0"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RadioManager",
			"item": [
				{
					"name": "Get channels for a radio mode and channel width",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/radios/channels?ChannelWidth=Auto&country=UNITED_STATES&radioMode=ax6&sn={{apSerialNumber}}&txbf=false&radioIndex=3&ocs=false&sensor=false",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"radios",
								"channels"
							],
							"query": [
								{
									"key": "ChannelWidth",
									"value": "Auto",
									"description": "string (ChannelWidth)\nEnum: \"Ch1Width_20MHz\" \"Ch1Width_40MHz\" \"Ch1Width_Auto\" \"Ch1Width_80MHz\" \"Ch1Width_160MHz\" \"Auto\"\nExample: channelWidth=Ch1Width_20MHz\nChannel width of the requested channel list"
								},
								{
									"key": "country",
									"value": "UNITED_STATES",
									"description": "string (Country)\nEnum: \"AFGHANISTAN\" \"ALBANIA\" \"ALGERIA\" \"AMERICAN_SAMOA\" \"ANDORRA\" \"ANGOLA\" \"ANGUILLA\" \"ANTARCTICA\" \"ANTIGUA_BARBUDA\" \"ARGENTINA\" \"ARMENIA\" \"ARUBA\" \"AUSTRALIA\" \"AUSTRIA\" \"AZERBAIJAN\" \"BAHAMAS\" \"BAHRAIN\" \"BANGLADESH\" \"BARBADOS\" \"BELARUS\" \"BELGIUM\" \"BELIZE\" \"BENIN\" \"BERMUDA\" \"BHUTAN\" \"BOLIVIA\" \"BOSNIA_HERZEGOVINA\" \"BOTSWANA\" \"BOUVET_ISLAND\" \"BRAZIL\" \"BRITISH_INDIAN_OCEAN_TERRITORY\" \"BRUNEI_DARUSSALAM\" \"BULGARIA\" \"BURKINA_FASO\" \"BURUNDI\" \"CAMBODIA\" \"CAMEROON\" \"CANADA\" \"CAPE_VERDE\" \"CAYMAN_ISLANDS\" \"CENTRAL_AFRICAN_REPUBLIC\" \"CHAD\" \"CHILE\" \"CHINA\" \"CHRISTMAS_ISLAND\" \"COCOS_KEELING_ISLANDS\" \"COLOMBIA\" \"COMOROS\" \"CONGO\" \"CONGO_THE_DRC\" \"COOK_ISLANDS\" \"COSTA_RICA\" \"IVORY_COAST\" \"CROATIA\" \"CUBA\" \"CURACAO\" \"CYPRUS\" \"CZECH\" \"DENMARK\" \"DJIBOUTI\" \"DOMINICA\" \"DOMINICAN\" \"EAST_TIMOR\" \"ECUADOR\" \"EGYPT\" \"EL_SALVADOR\" \"EQUATORIAL_GUINEA\" \"ERITREA\" \"ESTONIA\" \"ETHIOPIA\" \"FALKLAND_ISLANDS_MALVINAS\" \"FAEROE_ISLANDS\" \"FIJI\" \"FINLAND\" \"FRANCE\" \"FRANCE_METROPOLITAN\" \"FRENCH_GUIANA\" \"FRENCH_POLYNESIA\" \"FRENCH_SOUTHERN_TERRITORIES\" \"GABON\" \"GAMBIA\" \"GEORGIA\" \"GERMANY\" \"GHANA\" \"GIBRALTAR\" \"GREECE\" \"GREENLAND\" \"GRENADA\" \"GUADELOUPE\" \"GUAM\" \"GUATEMALA\" \"GUINEA\" \"GUINEA_BISSAU\" \"GUYANA\" \"HAITI\" \"HEARD_AND_MC_DONALD_ISLANDS\" \"VATICAN\" \"HONDURAS\" \"HONG_KONG\" \"HUNGARY\" \"ICELAND\" \"INDIA\" \"INDONESIA\" \"IRAN\" \"IRAQ\" \"IRELAND\" \"ISRAEL\" \"ITALY\" \"JAMAICA\" \"JAPAN\" \"JORDAN\" \"KAZAKHSTAN\" \"KENYA\" \"KIRIBATI\" \"KOREA_NORTH\" \"KOREA\" \"KOSOVO\" \"KUWAIT\" \"KYRGYZSTAN\" \"LAOS\" \"LATVIA\" \"LEBANON\" \"LESOTHO\" \"LIBERIA\" \"LIBYA\" \"LIECHTENSTEIN\" \"LITHUANIA\" \"LUXEMBOURG\" \"MACAU\" \"MACAULL\" \"MACEDONIA\" \"MADAGASCAR\" \"MALAWI\" \"MALAYSIA\" \"MALDIVES\" \"MALI\" \"MALTA\" \"MARSHALL_ISLANDS\" \"MARTINIQUE\" \"MAURITANIA\" \"MAURITIUS\" \"MAYOTTE\" \"MEXICO\" \"MICRONESIA_FEDERATED_STATES_OF\" \"MOLDOVA_REPUBLIC_OF\" \"MONACO\" \"MONGOLIA\" \"MONTENEGRO\" \"MONTSERRAT\" \"MOROCCO\" \"MOZAMIBIQUE\" \"MYANMAR_BURMA\" \"NAMIBIA\" \"NAURU\" \"NEPAL\" \"NETHERLANDS\" \"NEW_CALEDONIA\" \"NEW_ZEALAND\" \"NICARAGUA\" \"NIGER\" \"NIGERIA\" \"NIUE\" \"NORFOLK_ISLAND\" \"NORTHERN_MARIANA_ISLANDS\" \"NORWAY\" \"OMAN\" \"PAKISTAN\" \"PALAU\" \"PANAMA\" \"PAPUA_NEW_GUINEA\" \"PARAGUAY\" \"PERU\" \"PHILIPPINES\" \"PITCAIRN\" \"POLAND\" \"PORTUGAL\" \"PUERTO_RICO\" \"QATAR\" \"REUNION\" \"ROMANIA\" \"RUSSIA\" \"RWANDA\" \"SAINT_KITTS_AND_NEVIS\" \"SAINT_LUCIA\" \"SAINT_VINCENT_AND_THE_GRENADINES\" \"SAMOA\" \"SAN_MARINO\" \"SAO_TOME_AND_PRINCIPE\" \"SAUDI_ARABIA\" \"SENEGAL\" \"SERBIA\" \"SERBIA_MONTENEGRO\" \"SEYCHELLES\" \"SIERRA_LEONE\" \"SINGAPORE\" \"SLOVAKIA\" \"SLOVENIA\" \"SOLOMON_ISLANDS\" \"SOMALIA\" \"SOUTH_AFRICA\" \"SOUTH_GEORGIA_AND_SOUTH_SS\" \"SOUTH_SUDAN\" \"SPAIN\" \"SRI_LANKA\" \"ST_HELENA\" \"ST_PIERRE_AND_MIQUELON\" \"SUDAN\" \"SURINAME\" \"SVALBARD_AND_JAN_MAYEN_ISLANDS\" \"SWAZILAND\" \"SWEDEN\" \"SWITZERLAND\" \"SYRIA\" \"TAIWAN\" \"TAJIKISTAN\" \"TANZANIA_UNITED_REPUBLIC_OF\" \"THAILAND\" \"TOGO\" \"TOKELAU\" \"TONGA\" \"TRINIDAD_AND_TOBAGO\" \"TUNISIA\" \"TURKEY\" \"TURKMENISTAN\" \"TURKS_AND_CAICOS_ISLANDS\" \"TUVALU\" \"UGANDA\" \"UKRAINE\" \"UAE\" \"UNITED_KINGDOM\" \"UNITED_STATES\" \"URUGUAY\" \"US_MINOR_ISLANDS\" \"UZBEKISTAN\" \"VANUATU\" \"VENEZUELA\" \"VIETNAM\" \"VIRGIN_ISLANDS_BRITISH\" \"VIRGIN_ISLANDS_US\" \"WALLIS_AND_FUTUNA_ISLANDS\" \"WESTERN_SAHARA\" \"YEMEN\" \"ZAMBIA\" \"ZIMBABWE\" \"DEBUG\" \"DEMO\" \"NETHERLANDS_ANTILLES\"\nExample: country=UNITED_STATES\nCountry"
								},
								{
									"key": "radioMode",
									"value": "ax6",
									"description": "string (RadioMode)\nEnum: \"sensor\" \"b\" \"g\" \"bg\" \"gn\" \"bgn\" \"gnstrict\" \"gnx\" \"a\" \"an\" \"anstrict\" \"anc\" \"acstrict\" \"ancx\" \"ax6\" \"bridge\"\nExample: radioMode=sensor\nRadio mode of the requested channel list"
								},
								{
									"key": "sn",
									"value": "{{apSerialNumber}}",
									"description": "string"
								},
								{
									"key": "txbf",
									"value": "false",
									"description": "boolean\nBoolean to indicate txBf of the request"
								},
								{
									"key": "radioIndex",
									"value": "3",
									"description": "integer (RadioIndex) [ 1 .. 3 ]\nExample: radioIndex=1\nOptional radio index of the request. When radioIndex is not provided, it is derived from radioMode. For APs with dual-band radios, both radios can use the same radio mode, while allowing different channels and maximum Tx power. For example, the AP510 can operate both radios on the 5 GHz band. In this case, radioIndex=1 allows channels 36 to 64, and radioIndex=2 allows channels 100 to 165."
								},
								{
									"key": "ocs",
									"value": "false",
									"description": "boolean\nDefault: false\nOptional indication that the requested list of channels will be used for the Off Channel Scanning (OCS) list. The response will include a list of all channels with all supported channel widths."
								},
								{
									"key": "sensor",
									"value": "false",
									"description": "boolean\nDefault: false\nOptional indication that the requested list of channels will be used for the sensor channel list. The response will include a list of all channels for all radios with all supported channel widths. radioIndex is ignored."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get radio mode for a radio index",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/radios/modes?sn={{apSerialNumber}}&radioIndex=3",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"radios",
								"modes"
							],
							"query": [
								{
									"key": "sn",
									"value": "{{apSerialNumber}}",
									"description": "string"
								},
								{
									"key": "radioIndex",
									"value": "3",
									"description": "integer (RadioIndex) [ 1 .. 3 ]\nExample: radioIndex=1\nOptional radio index of the request. When radioIndex is not provided, it is derived from radioMode. For APs with dual-band radios, both radios can use the same radio mode, while allowing different channels and maximum Tx power. For example, the AP510 can operate both radios on the 5 GHz band. In this case, radioIndex=1 allows channels 36 to 64, and radioIndex=2 allows channels 100 to 165."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get smartrfchannels for the given radio band type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/radios/smartrfchannels?radioBand=Band5",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"radios",
								"smartrfchannels"
							],
							"query": [
								{
									"key": "radioBand",
									"value": "Band5",
									"description": "string (RadioBand)\nEnum: \"Band5\" \"Band6\" \"Band24\" \"BandNONE\"\nExample: radioBand=Band5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RateLimiterManager",
			"item": [
				{
					"name": "Get list of rate limiters for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/ratelimiters",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"ratelimiters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new rate limiter for an access point",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"75b777e6-0557-11e9-99f4-000c29a7fe8f\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"aaa\",\n  \"cirKbps\": 25000\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/ratelimiters",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"ratelimiters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a rate limiter with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/ratelimiters/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"ratelimiters",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rate limiter names mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/ratelimiters/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"ratelimiters",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a rate limiter by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/ratelimiters/{{rateLimiterId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"ratelimiters",
								"{{rateLimiterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a rate limiter by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"{{rateLimiterId}}\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"aaa\",\n  \"cirKbps\": 25000\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/ratelimiters/{{rateLimiterId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"ratelimiters",
								"{{rateLimiterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a rate limiter for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/ratelimiters/{{rateLimiterId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"ratelimiters",
								"{{rateLimiterId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ReportTemplateManager",
			"item": [
				{
					"name": "Get a list of report templates",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/templates",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new report template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customTemplate\": {\n    \"widgets\": [\n      {\n        \"id\": \"string\",\n        \"filter\": \"all\"\n      }\n    ]\n  },\n  \"creationTimeStamp\": 0\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/templates",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a report template by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/templates/{{templateId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"templates",
								"{{templateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a report template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customTemplate\": {\n    \"widgets\": [\n      {\n        \"id\": \"string\",\n        \"filter\": \"all\"\n      }\n    ]\n  },\n  \"creationTimeStamp\": 0\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/templates/{{templateId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"templates",
								"{{templateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a template",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/templates/{{templateId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"templates",
								"{{templateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get template with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/templates/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"templates",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get template name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/templates/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"templates",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of scheduled reports",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/scheduled",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"scheduled"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create scheduled report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"templateId\": \"string\",\n  \"name\": \"string\",\n  \"creator\": \"string\",\n  \"scope\": \"string\",\n  \"period\": {\n    \"value\": \"None\",\n    \"start\": 0,\n    \"end\": 0\n  },\n  \"format\": \"Pdf\",\n  \"generatedReportAction\": \"Store\",\n  \"runNow\": true,\n  \"status\": \"Queued\",\n  \"creationTimestamp\": 0,\n  \"title\": \"string\",\n  \"userGroups\": [\n    {\n      \"name\": \"string\",\n      \"selection\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/scheduled",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"scheduled"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get scheduled report setting",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/scheduled/{{reportId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"scheduled",
								"{{reportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update scheduled report setting",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"string\",\n  \"templateId\": \"string\",\n  \"name\": \"string\",\n  \"creator\": \"string\",\n  \"scope\": \"string\",\n  \"period\": {\n    \"value\": \"None\",\n    \"start\": 0,\n    \"end\": 0\n  },\n  \"format\": \"Pdf\",\n  \"generatedReportAction\": \"Store\",\n  \"runNow\": true,\n  \"status\": \"Queued\",\n  \"creationTimestamp\": 0,\n  \"title\": \"string\",\n  \"userGroups\": [\n    {\n      \"name\": \"string\",\n      \"selection\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/scheduled/{{reportId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"scheduled",
								"{{reportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a scheduled report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/scheduled/{{reportId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"scheduled",
								"{{reportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get report with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/scheduled/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"scheduled",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get report name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/scheduled/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"scheduled",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of generated user reports",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/generated",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"generated"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a scheduled user report by filename",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/generated/{{filename}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"generated",
								"{{filename}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a generated report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/generated/{{filename}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"generated",
								"{{filename}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a list of generated report files",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{{filename}},\n\"string\"\n]"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/generated/filelist",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"generated",
								"filelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of available widget definitions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/reports/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"reports",
								"widgets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ReportsManager",
			"item": [
				{
					"name": "Get Device Upgrade report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v2/report/upgrade/devices",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v2",
								"report",
								"upgrade",
								"devices"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RFMgmtPolicyManager",
			"item": [
				{
					"name": "Get list of all RF management policy profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/rfmgmt",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"rfmgmt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new RF management policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"bd9d7042-f0c7-11e7-8c3f-9a214cf093ae\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"Default Smart RF\",\n  \"type\": \"SmartRf\",\n  \"smartRf\": {\n    \"basic\": {\n      \"sensitivity\": \"MEDIUM\",\n      \"interferenceRecovery\": true,\n      \"coverageHoleRecovery\": true,\n      \"neighborRecovery\": true\n    },\n    \"powerAndChannel\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"txMinPower\": 4,\n          \"txMaxPower\": 10,\n          \"acsPlan\": \"ChannelPlanAllNonDFS\",\n          \"acsList\": [],\n          \"channelWidth\": \"Ch1Width_Auto\"\n        }\n      ]\n    },\n    \"scanning\": {\n      \"smartMonitoring\": false,\n      \"ocsMonitoringAwareness\": false,\n      \"ocsMonitoringAwarenessThreshold\": 10,\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"duration\": 50,\n          \"freq\": 6,\n          \"extFreq\": 5,\n          \"sampleCount\": 5,\n          \"clientAware\": false,\n          \"clientCount\": 1,\n          \"powerSaveAware\": \"DYNAMIC\",\n          \"voiceAware\": \"DYNAMIC\",\n          \"txLoadAware\": false,\n          \"txLoadAwarePercent\": 1\n        }\n      ]\n    },\n    \"neighbourRecovery\": {\n      \"powerHoldTime\": 0,\n      \"dynamicSample\": false,\n      \"sampleRetries\": 3,\n      \"sampleThreshold\": 5,\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"powerThreshold\": -70\n        }\n      ]\n    },\n    \"interferenceRecovery\": {\n      \"noiseRecovery\": true,\n      \"noiseFactor\": \"1.5\",\n      \"clientHoldTime\": 1800,\n      \"clientThreshold\": 50,\n      \"selectShutdown\": false,\n      \"selectShutdownHighTh\": -80,\n      \"selectShutdownLowTh\": -100,\n      \"selectShutdownFreq\": 60,\n      \"selectShutdownFreqLimit\": 10,\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"chSwitchDelta\": 20\n        }\n      ]\n    },\n    \"coverageHoleRecovery\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"clientThreshold\": 1,\n          \"snrThreshold\": 20,\n          \"coverageInterval\": 10,\n          \"recoveryInterval\": 30\n        }\n      ]\n    }\n  },\n  \"acs\": {\n    \"basic\": {\n      \"interferenceRecovery\": true,\n      \"neighborRecovery\": true\n    },\n    \"powerAndChannel\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"txMinPower\": 4,\n          \"txMaxPower\": 17,\n          \"acsPlan\": \"ChannelPlanAllNonDFS\",\n          \"acsList\": [],\n          \"channelWidth\": \"Ch1Width_Auto\"\n        }\n      ]\n    },\n    \"neighbourRecovery\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\"\n        }\n      ]\n    },\n    \"interferenceRecovery\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"noiseThreshold\": -80,\n          \"detectMicrowave\": false,\n          \"waitTime\": 10,\n          \"detectCordlessPhone\": false,\n          \"channelOccupancyThreshold\": 100,\n          \"updatePeriod\": 5,\n          \"detectConstantWave\": false,\n          \"detectVideoBridge\": false,\n          \"detectBluetooth\": false\n        }\n      ]\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/rfmgmt",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"rfmgmt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RF management policy profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/rfmgmt/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"rfmgmt",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RF management policy profile name mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/rfmgmt/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"rfmgmt",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RF management policy profile by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/rfmgmt/{{rfmgmtId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"rfmgmt",
								"{{rfmgmtId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RF management policy profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"bd9d7042-f0c7-11e7-8c3f-9a214cf093ae\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"Default Smart RF\",\n  \"type\": \"SmartRf\",\n  \"smartRf\": {\n    \"basic\": {\n      \"sensitivity\": \"MEDIUM\",\n      \"interferenceRecovery\": true,\n      \"coverageHoleRecovery\": true,\n      \"neighborRecovery\": true\n    },\n    \"powerAndChannel\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"txMinPower\": 4,\n          \"txMaxPower\": 10,\n          \"acsPlan\": \"ChannelPlanAllNonDFS\",\n          \"acsList\": [],\n          \"channelWidth\": \"Ch1Width_Auto\"\n        }\n      ]\n    },\n    \"scanning\": {\n      \"smartMonitoring\": false,\n      \"ocsMonitoringAwareness\": false,\n      \"ocsMonitoringAwarenessThreshold\": 10,\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"duration\": 50,\n          \"freq\": 6,\n          \"extFreq\": 5,\n          \"sampleCount\": 5,\n          \"clientAware\": false,\n          \"clientCount\": 1,\n          \"powerSaveAware\": \"DYNAMIC\",\n          \"voiceAware\": \"DYNAMIC\",\n          \"txLoadAware\": false,\n          \"txLoadAwarePercent\": 1\n        }\n      ]\n    },\n    \"neighbourRecovery\": {\n      \"powerHoldTime\": 0,\n      \"dynamicSample\": false,\n      \"sampleRetries\": 3,\n      \"sampleThreshold\": 5,\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"powerThreshold\": -70\n        }\n      ]\n    },\n    \"interferenceRecovery\": {\n      \"noiseRecovery\": true,\n      \"noiseFactor\": \"1.5\",\n      \"clientHoldTime\": 1800,\n      \"clientThreshold\": 50,\n      \"selectShutdown\": false,\n      \"selectShutdownHighTh\": -80,\n      \"selectShutdownLowTh\": -100,\n      \"selectShutdownFreq\": 60,\n      \"selectShutdownFreqLimit\": 10,\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"chSwitchDelta\": 20\n        }\n      ]\n    },\n    \"coverageHoleRecovery\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"clientThreshold\": 1,\n          \"snrThreshold\": 20,\n          \"coverageInterval\": 10,\n          \"recoveryInterval\": 30\n        }\n      ]\n    }\n  },\n  \"acs\": {\n    \"basic\": {\n      \"interferenceRecovery\": true,\n      \"neighborRecovery\": true\n    },\n    \"powerAndChannel\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"txMinPower\": 4,\n          \"txMaxPower\": 17,\n          \"acsPlan\": \"ChannelPlanAllNonDFS\",\n          \"acsList\": [],\n          \"channelWidth\": \"Ch1Width_Auto\"\n        }\n      ]\n    },\n    \"neighbourRecovery\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\"\n        }\n      ]\n    },\n    \"interferenceRecovery\": {\n      \"bandSettings\": [\n        {\n          \"bandId\": \"Band5\",\n          \"noiseThreshold\": -80,\n          \"detectMicrowave\": false,\n          \"waitTime\": 10,\n          \"detectCordlessPhone\": false,\n          \"channelOccupancyThreshold\": 100,\n          \"updatePeriod\": 5,\n          \"detectConstantWave\": false,\n          \"detectVideoBridge\": false,\n          \"detectBluetooth\": false\n        }\n      ]\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/rfmgmt/{{rfmgmtId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"rfmgmt",
								"{{rfmgmtId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RF management policy profile for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/rfmgmt/{{rfmgmtId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"rfmgmt",
								"{{rfmgmtId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RoleManager",
			"item": [
				{
					"name": "Get list of all roles for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a role",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"4459ee6c-2f76-11e7-93ae-92361f002671\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"Enterprise User\",\n  \"l2Filters\": [\n    {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"name\": \"xtx\",\n      \"intoNetwork\": \"destAddr\",\n      \"outFromNetwork\": \"sourceAddr\",\n      \"action\": \"FILTERACTION_ALLOW\",\n      \"topologyId\": null,\n      \"cosId\": null,\n      \"userDefinedEthertype\": 2048,\n      \"macAddrType\": \"any\",\n      \"macAddress\": null,\n      \"ethertype\": \"ipv4\",\n      \"userPriority\": \"notApplicable\"\n    }\n  ],\n  \"l3Filters\": [],\n  \"l7Filters\": [],\n  \"defaultAction\": \"allow\",\n  \"profiles\": [\n    \"d564381c-5f91-11e8-bd65-000c29a7fe8f\"\n  ],\n  \"topology\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n  \"defaultCos\": \"1eea4d66-2607-11e7-93ae-92361f002672\",\n  \"cpRedirect\": \"\",\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"cpIdentity\": \"\",\n  \"cpSharedKey\": \"\",\n  \"cpDefaultRedirectUrl\": \"\",\n  \"cpRedirectUrlSelect\": \"URLTARGET\",\n  \"cpHttp\": false,\n  \"cpAddIpAndPort\": true,\n  \"cpAddApNameAndSerial\": true,\n  \"cpAddBssid\": true,\n  \"cpAddVnsName\": true,\n  \"cpAddSsid\": true,\n  \"cpAddMac\": true,\n  \"cpAddRole\": true,\n  \"cpAddVlan\": true,\n  \"cpAddTime\": true,\n  \"cpAddSign\": true,\n  \"cpTopologyId\": null,\n  \"cpUseFQDN\": false,\n  \"cpOauthUseGoogle\": false,\n  \"cpOauthUseFacebook\": false,\n  \"cpOauthUseMicrosoft\": false,\n  \"predefined\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get roles names mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get role by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles/{{roleId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles",
								"{{roleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a role",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"4459ee6c-2f76-11e7-93ae-92361f002671\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"Enterprise User\",\n  \"l2Filters\": [\n    {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"name\": \"xtx\",\n      \"intoNetwork\": \"destAddr\",\n      \"outFromNetwork\": \"sourceAddr\",\n      \"action\": \"FILTERACTION_ALLOW\",\n      \"topologyId\": null,\n      \"cosId\": null,\n      \"userDefinedEthertype\": 2048,\n      \"macAddrType\": \"any\",\n      \"macAddress\": null,\n      \"ethertype\": \"ipv4\",\n      \"userPriority\": \"notApplicable\"\n    }\n  ],\n  \"l3Filters\": [],\n  \"l7Filters\": [],\n  \"defaultAction\": \"allow\",\n  \"profiles\": [\n    \"d564381c-5f91-11e8-bd65-000c29a7fe8f\"\n  ],\n  \"topology\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n  \"defaultCos\": \"1eea4d66-2607-11e7-93ae-92361f002672\",\n  \"cpRedirect\": \"\",\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"cpIdentity\": \"\",\n  \"cpSharedKey\": \"\",\n  \"cpDefaultRedirectUrl\": \"\",\n  \"cpRedirectUrlSelect\": \"URLTARGET\",\n  \"cpHttp\": false,\n  \"cpAddIpAndPort\": true,\n  \"cpAddApNameAndSerial\": true,\n  \"cpAddBssid\": true,\n  \"cpAddVnsName\": true,\n  \"cpAddSsid\": true,\n  \"cpAddMac\": true,\n  \"cpAddRole\": true,\n  \"cpAddVlan\": true,\n  \"cpAddTime\": true,\n  \"cpAddSign\": true,\n  \"cpTopologyId\": null,\n  \"cpUseFQDN\": false,\n  \"cpOauthUseGoogle\": false,\n  \"cpOauthUseFacebook\": false,\n  \"cpOauthUseMicrosoft\": false,\n  \"predefined\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles/{{roleId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles",
								"{{roleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a role (given a service ID for creation of a special role)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"4459ee6c-2f76-11e7-93ae-92361f002671\",\n  \"canDelete\": false,\n  \"canEdit\": true,\n  \"name\": \"Enterprise User\",\n  \"l2Filters\": [\n    {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"name\": \"xtx\",\n      \"intoNetwork\": \"destAddr\",\n      \"outFromNetwork\": \"sourceAddr\",\n      \"action\": \"FILTERACTION_ALLOW\",\n      \"topologyId\": null,\n      \"cosId\": null,\n      \"userDefinedEthertype\": 2048,\n      \"macAddrType\": \"any\",\n      \"macAddress\": null,\n      \"ethertype\": \"ipv4\",\n      \"userPriority\": \"notApplicable\"\n    }\n  ],\n  \"l3Filters\": [],\n  \"l7Filters\": [],\n  \"defaultAction\": \"allow\",\n  \"profiles\": [\n    \"d564381c-5f91-11e8-bd65-000c29a7fe8f\"\n  ],\n  \"topology\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n  \"defaultCos\": \"1eea4d66-2607-11e7-93ae-92361f002672\",\n  \"cpRedirect\": \"\",\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"cpIdentity\": \"\",\n  \"cpSharedKey\": \"\",\n  \"cpDefaultRedirectUrl\": \"\",\n  \"cpRedirectUrlSelect\": \"URLTARGET\",\n  \"cpHttp\": false,\n  \"cpAddIpAndPort\": true,\n  \"cpAddApNameAndSerial\": true,\n  \"cpAddBssid\": true,\n  \"cpAddVnsName\": true,\n  \"cpAddSsid\": true,\n  \"cpAddMac\": true,\n  \"cpAddRole\": true,\n  \"cpAddVlan\": true,\n  \"cpAddTime\": true,\n  \"cpAddSign\": true,\n  \"cpTopologyId\": null,\n  \"cpUseFQDN\": false,\n  \"cpOauthUseGoogle\": false,\n  \"cpOauthUseFacebook\": false,\n  \"cpOauthUseMicrosoft\": false,\n  \"predefined\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles/{{roleId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles",
								"{{roleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete role for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles/{{roleId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles",
								"{{roleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rule stats by role ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/roles/{{roleId}}/rulestats",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"roles",
								"{{roleId}}",
								"rulestats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current stations with role",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/roles/{{roleId}}/stations",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"roles",
								"{{roleId}}",
								"stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for role report (/v1/roles/{roleId}/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/roles/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"roles",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Role report by role ID. (Use /v1/roles/report/widgets to get all available widgets. Select one. Then, use /v1/roles/{roleId}/report/(PUT))",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/roles/{{roleId}}/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"roles",
								"{{roleId}}",
								"report"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ServiceManager",
			"item": [
				{
					"name": "Get list of all services",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"26942420-6179-11e8-a0a4-c98f03226474\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"serviceName\": \"1ecaicpguestwebbatac\",\n  \"captivePortalType\": \"Internal\",\n  \"cpNonAuthenticatedPolicyName\": \"Unregistered role for 1ecaicpguestwebbatac\",\n  \"status\": \"enabled\",\n  \"shutdownOnMeshpointLoss\": false,\n  \"ssid\": \"1ecaicpguestwebbatac\",\n  \"unAuthenticatedUserDefaultRoleID\": \"26942420-6179-11e8-a0a4-c98f03226474\",\n  \"defaultTopology\": \"a6a583f9-c5b0-4dca-b77c-36f99eb434b2\",\n  \"defaultCoS\": \"1eea4d66-2607-11e7-93ae-92361f002671\",\n  \"flexibleClientAccess\": false,\n  \"privacy\": {\n    \"WpaPskElement\": {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"mode\": \"auto\",\n      \"pmfMode\": \"enabled\",\n      \"keyHexEncoded\": false,\n      \"presharedKey\": \"abcde12345\"\n    }\n  },\n  \"enabledSchedule\": null,\n  \"suppressSsid\": false,\n  \"enabled11kSupport\": false,\n  \"preAuthenticatedIdleTimeout\": 300,\n  \"postAuthenticatedIdleTimeout\": 1800,\n  \"sessionTimeout\": 0,\n  \"uapsdEnabled\": true,\n  \"rm11kBeaconReport\": false,\n  \"rm11kQuietIe\": false,\n  \"admissionControlVideo\": false,\n  \"admissionControlVoice\": false,\n  \"admissionControlBestEffort\": false,\n  \"admissionControlBackgroundTraffic\": false,\n  \"atf\": \"Off\",\n  \"mbaAuthorization\": true,\n  \"vendorSpecificAttributes\": [\n    \"apName\"\n  ],\n  \"enableCaptivePortal\": true,\n  \"authenticatedUserDefaultRoleID\": \"4459ee6c-2f76-11e7-93ae-92361f002671\",\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"dot1dPortNumber\": 110,\n  \"accountingEnabled\": false,\n  \"mbatimeoutRoleId\": null,\n  \"proxied\": \"Local\",\n  \"roamingAssistPolicy\": null,\n  \"clientToClientCommunication\": true,\n  \"includeHostname\": false,\n  \"mbo\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service names mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get service by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"26942420-6179-11e8-a0a4-c98f03226474\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"serviceName\": \"1ecaicpguestwebbatac\",\n  \"captivePortalType\": \"Internal\",\n  \"cpNonAuthenticatedPolicyName\": \"Unregistered role for 1ecaicpguestwebbatac\",\n  \"status\": \"enabled\",\n  \"shutdownOnMeshpointLoss\": false,\n  \"ssid\": \"1ecaicpguestwebbatac\",\n  \"unAuthenticatedUserDefaultRoleID\": \"26942420-6179-11e8-a0a4-c98f03226474\",\n  \"defaultTopology\": \"a6a583f9-c5b0-4dca-b77c-36f99eb434b2\",\n  \"defaultCoS\": \"1eea4d66-2607-11e7-93ae-92361f002671\",\n  \"flexibleClientAccess\": false,\n  \"privacy\": {\n    \"WpaPskElement\": {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"mode\": \"auto\",\n      \"pmfMode\": \"enabled\",\n      \"keyHexEncoded\": false,\n      \"presharedKey\": \"abcde12345\"\n    }\n  },\n  \"enabledSchedule\": null,\n  \"suppressSsid\": false,\n  \"enabled11kSupport\": false,\n  \"preAuthenticatedIdleTimeout\": 300,\n  \"postAuthenticatedIdleTimeout\": 1800,\n  \"sessionTimeout\": 0,\n  \"uapsdEnabled\": true,\n  \"rm11kBeaconReport\": false,\n  \"rm11kQuietIe\": false,\n  \"admissionControlVideo\": false,\n  \"admissionControlVoice\": false,\n  \"admissionControlBestEffort\": false,\n  \"admissionControlBackgroundTraffic\": false,\n  \"atf\": \"Off\",\n  \"mbaAuthorization\": true,\n  \"vendorSpecificAttributes\": [\n    \"apName\"\n  ],\n  \"enableCaptivePortal\": true,\n  \"authenticatedUserDefaultRoleID\": \"4459ee6c-2f76-11e7-93ae-92361f002671\",\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"dot1dPortNumber\": 110,\n  \"accountingEnabled\": false,\n  \"mbatimeoutRoleId\": null,\n  \"proxied\": \"Local\",\n  \"roamingAssistPolicy\": null,\n  \"clientToClientCommunication\": true,\n  \"includeHostname\": false,\n  \"mbo\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a service by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list access point serial numbers for a service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}/deviceids",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}",
								"deviceids"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of site IDs at which the service is currently deployed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}/siteids",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}",
								"siteids"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current stations of a service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}/stations",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}",
								"stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for Service report (/v1/services/{serviceId}/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Service report. (Use /v1/services/report/widgets to get all available widgets. Select one. Then, use /v1/services/{serviceId}/report (PUT))",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of profiles and APs that use the specified service as the primary BSSID. Disabling or removing the service could cause a radio reset.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/services/{{serviceId}}/bssid0",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"services",
								"{{serviceId}}",
								"bssid0"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SiteManager",
			"item": [
				{
					"name": "Get SNMP configurations defined across all sites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/snmp",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"snmp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of sites for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new site for the selected access point",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"eaab6b13-865d-4475-a26f-d3d95b6e0812\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"siteName\": \"ThornhillCentralized\",\n  \"country\": \"CANADA\",\n  \"distributed\": false,\n  \"timezone\": \"America/Toronto\",\n  \"aaaPolicy\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"name\": null,\n    \"radiusAuthProtocol\": \"PAP\",\n    \"radiusAccountingEnabled\": false,\n    \"authenticationRadiusServers\": [],\n    \"accountingRadiusServers\": []\n  },\n  \"deviceGroups\": [\n    {\n      \"custId\": null,\n      \"id\": \"4fe0d49e-4399-468c-abe5-581df0728505\",\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"groupName\": \"DG-3912\",\n      \"loadBalanceBandPreferenceEnabled\": false,\n      \"roleIDs\": null,\n      \"apSerialNumbers\": [\n        \"1730Y-1015200000\"\n      ],\n      \"topologyIDs\": null,\n      \"serviceIDs\": null,\n      \"backboneTopologyIDs\": null,\n      \"radioAssignment\": null,\n      \"wiredInterfaceAssignment\": null,\n      \"enableDpi\": true,\n      \"minimumBaseRate2_4\": 6,\n      \"minimumBaseRate5\": 6,\n      \"stbcEnabled2_4\": false,\n      \"stbcEnabled5\": false,\n      \"txbfEnabled2_4\": \"muMimo\",\n      \"txbfEnabled5\": \"disabled\",\n      \"rfMgmtPolicyId\": \"bd9d7042-f0c7-11e7-8c3f-9a214cf093af\",\n      \"aggregateMpdu5\": true,\n      \"aggregateMpdu2_4\": true,\n      \"profileId\": \"41f88f5a-f0c0-11e7-8c3f-9a214cf09306\",\n      \"xaiService\": \"LICENSED\",\n      \"xaiServiceExpiryDate\": 1617263995\n    }\n  ],\n  \"switchSerialNumbers\": [\n    \"1733N-42224\"\n  ],\n  \"stpEnabled\": false,\n  \"siteManagerName\": \"\",\n  \"siteManagerEmail\": \"\",\n  \"contact\": \"\",\n  \"treeNode\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"country\": \"CANADA\",\n    \"region\": \"\",\n    \"campus\": \"\",\n    \"city\": \"\",\n    \"mapCoordinates\": \"-79.36981999999999,43.8373972\"\n  },\n  \"snmpConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"trapSeverity\": \"Critical\",\n    \"snmpVersion\": \"DISABLED\",\n    \"engineId\": null,\n    \"context\": null,\n    \"v2Communities\": {},\n    \"v3Users\": [],\n    \"notifications\": []\n  },\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"proxied\": \"Local\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SNMP configuration with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/snmp/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"snmp",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of supported countries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/countrylist",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"countrylist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get site configuration with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get site names mapped to IDs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get site by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/{{siteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"{{siteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a site by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"eaab6b13-865d-4475-a26f-d3d95b6e0812\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"siteName\": \"ThornhillCentralized\",\n  \"country\": \"CANADA\",\n  \"distributed\": false,\n  \"timezone\": \"America/Toronto\",\n  \"aaaPolicy\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"name\": null,\n    \"radiusAuthProtocol\": \"PAP\",\n    \"radiusAccountingEnabled\": false,\n    \"authenticationRadiusServers\": [],\n    \"accountingRadiusServers\": []\n  },\n  \"deviceGroups\": [\n    {\n      \"custId\": null,\n      \"id\": \"4fe0d49e-4399-468c-abe5-581df0728505\",\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"groupName\": \"DG-3912\",\n      \"loadBalanceBandPreferenceEnabled\": false,\n      \"roleIDs\": null,\n      \"apSerialNumbers\": [\n        \"1730Y-1015200000\"\n      ],\n      \"topologyIDs\": null,\n      \"serviceIDs\": null,\n      \"backboneTopologyIDs\": null,\n      \"radioAssignment\": null,\n      \"wiredInterfaceAssignment\": null,\n      \"enableDpi\": true,\n      \"minimumBaseRate2_4\": 6,\n      \"minimumBaseRate5\": 6,\n      \"stbcEnabled2_4\": false,\n      \"stbcEnabled5\": false,\n      \"txbfEnabled2_4\": \"muMimo\",\n      \"txbfEnabled5\": \"disabled\",\n      \"rfMgmtPolicyId\": \"bd9d7042-f0c7-11e7-8c3f-9a214cf093af\",\n      \"aggregateMpdu5\": true,\n      \"aggregateMpdu2_4\": true,\n      \"profileId\": \"41f88f5a-f0c0-11e7-8c3f-9a214cf09306\",\n      \"xaiService\": \"LICENSED\",\n      \"xaiServiceExpiryDate\": 1617263995\n    }\n  ],\n  \"switchSerialNumbers\": [\n    \"1733N-42224\"\n  ],\n  \"stpEnabled\": false,\n  \"siteManagerName\": \"\",\n  \"siteManagerEmail\": \"\",\n  \"contact\": \"\",\n  \"treeNode\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"country\": \"CANADA\",\n    \"region\": \"\",\n    \"campus\": \"\",\n    \"city\": \"\",\n    \"mapCoordinates\": \"-79.36981999999999,43.8373972\"\n  },\n  \"snmpConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"trapSeverity\": \"Critical\",\n    \"snmpVersion\": \"DISABLED\",\n    \"engineId\": null,\n    \"context\": null,\n    \"v2Communities\": {},\n    \"v3Users\": [],\n    \"notifications\": []\n  },\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"proxied\": \"Local\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/{{siteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"{{siteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a site for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/{{siteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"{{siteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone a site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/clone/{{siteId}}?newSiteName=string",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"clone",
								"{{siteId}}"
							],
							"query": [
								{
									"key": "newSiteName",
									"value": "string",
									"description": "string\nA non-empty, valid names for the new site"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current stations of a site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/{{siteId}}/stations",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"{{siteId}}",
								"stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for RADIUS servers visibilty report (/v1/sites/visibility/radius/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/sites/visibility/radius/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"sites",
								"visibility",
								"radius",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS Servers Visibilty Report. (Use /v1/sites/visibility/radius/report/widgets to get all available widgets.)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"summary\": true,\n  \"servers\": [\n    \"192.168.0.1\"\n  ],\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/sites/visibility/radius/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"sites",
								"visibility",
								"radius",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for Site report (/v3/sites/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Site report. (Use /v3/sites/report/widgets to get all available widgets. Select one. Then, use /v3/sites/report (PUT))",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get report for all sites in the venue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/report/venue",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"report",
								"venue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for Site report (/v1/sites/{siteId}/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/sites/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"sites",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Site report. (Use /v1/sites/report/widgets to get all available widgets. Select one. Then, use /v1/sites/{siteId}/report (PUT))",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/sites/{{siteId}}/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"sites",
								"{{siteId}}",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get report for a Site by Site ID in the venue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/{{siteId}}/report/venue",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"{{siteId}}",
								"report",
								"venue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Impact reports for a site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/report/impact",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"report",
								"impact"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string ('3H'|'3D'|'14D')\nDefault: \"3H\"\nExample: duration=14D\nDuration. Valid values: Last 3 Hours, 3 Days, or 14 Days",
									"disabled": true
								},
								{
									"key": "widgetList",
									"value": "",
									"description": "Array of objects (ImpactReportInfo)\nExample: widgetList=[object Object]\nList of reports to be generated",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get impact reports for site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/{{siteId}}/report/impact",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"{{siteId}}",
								"report",
								"impact"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string ('3H'|'3D'|'14D')\nDefault: \"3H\"\nExample: duration=14D\nDuration. Valid values: Last 3 Hours, 3 Days, or 14 Days",
									"disabled": true
								},
								{
									"key": "widgetList",
									"value": "",
									"description": "Array of objects (ImpactReportInfo)\nExample: widgetList=[object Object]\nList of reports to be generated",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get historical data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/report/flex?duration=3H",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"report",
								"flex"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string ('3H'|'3D'|'14D')\nDefault: \"3H\"\nExample: duration=14D\nDuration. Valid values: Last 3 Hours, 3 Days, or 14 Days"
								},
								{
									"key": "query",
									"value": "",
									"description": "object (FlexQueryElement)\nParameters for specifying required data key, output type, time range of interest, and filtering criteria",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of all station locations on the given floor",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/report/location/floor/{{floorId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"report",
								"location",
								"floor",
								"{{floorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run the AFC query for the site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"coordinates\": {\n      \"latitude\": 43.633868800000016,\n      \"longitude\": -79.6164096,\n      \"ts\": 1707223561000\n    },\n    \"elevation\": {\n      \"height\": 20,\n      \"heightReference\": \"Agl\",\n      \"uncertainty\": 2\n    },\n    \"ellipse\": {\n      \"minorAxis\": 12345,\n      \"majorAxis\": 12345,\n      \"orientation\": 12345\n    },\n    \"environment\": \"indoor\",\n    \"serial\": \"1730Y-1007800000\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/afcquery",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"afcquery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run the AFC query for the site based on radius",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"radius\": 20,\n  \"coordinates\": {\n    \"latitude\": 43.633868800000016,\n    \"longitude\": -79.6164096,\n    \"source\": \"GPS\",\n    \"ts\": 1707223561000\n  },\n  \"height\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/sites/afcquery/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"sites",
								"afcquery",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get filtered list of all stations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v2/stations/query?query&requestedColumns&duration=3H&showActive=True",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v2",
								"stations",
								"query"
							],
							"query": [
								{
									"key": "query",
									"value": null,
									"description": "string\nQuery string to filter the stations list"
								},
								{
									"key": "requestedColumns",
									"value": null,
									"description": "Array of strings\nList of columns to display"
								},
								{
									"key": "duration",
									"value": "3H",
									"description": "string\nDefault: \"3H\"\nExample: duration=3H"
								},
								{
									"key": "showActive",
									"value": "True",
									"description": "boolean\nDefault: true\nShow only active stations"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get filtered list of all stations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v2/stations/query/visualize?query&requestedColumns&duration=3H&showActive=True",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v2",
								"stations",
								"query",
								"visualize"
							],
							"query": [
								{
									"key": "query",
									"value": null,
									"description": "string\nQuery string to filter the stations list"
								},
								{
									"key": "requestedColumns",
									"value": null,
									"description": "Array of strings\nList of columns to display"
								},
								{
									"key": "duration",
									"value": "3H",
									"description": "string\nDefault: \"3H\"\nExample: duration=3H"
								},
								{
									"key": "showActive",
									"value": "True",
									"description": "boolean\nDefault: true\nShow only active stations"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Return the columns list for v2/stations/query and v2/stations/query/visualize",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v2/stations/query/columns?duration=3H&showActive=True&suggestValues=True",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v2",
								"stations",
								"query",
								"columns"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string\nDefault: \"3H\"\nExample: duration=3H"
								},
								{
									"key": "showActive",
									"value": "True",
									"description": "boolean\nDefault: true\nShow only active stations"
								},
								{
									"key": "suggestValues",
									"value": "True",
									"description": "boolean\nDefault: true\nScan for suggest values for columns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the list of global settings for all sites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/globalsettings",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"globalsettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set global settings for all sites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpAutoLogin\": \"Hide\",\n  \"cloudVisibility\": {\n    \"reportingInterval\": 60,\n    \"address\": \"va-cw.extremecloudiq.com\"\n  },\n  \"txPowerRepresentation\": \"PerChain\",\n  \"extNatAddr\": \"134.141.122.1\",\n  \"trafficShaping\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/globalsettings",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"globalsettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for the site SmartRF report (/v4/sites/{siteId}/smartrf)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v4/sites/smartrf/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v4",
								"sites",
								"smartrf",
								"widgets"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string3H|3D|14D\nDefault: \"3H\"\nExample: duration=3H",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "StatisticsManager",
			"item": [
				{
					"name": "Get current stations of a tenant across all sites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations?duration=3H&showActive=True",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string 3H|3D|14D\nDefault: \"3H\"\nExample: duration=3H"
								},
								{
									"key": "showActive",
									"value": "True",
									"description": "boolean\nDefault: true\nShow only active stations."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disassociate list of stations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"5e590503-8983-4795-b2ba-962b6f388554\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"macList\": [\n    \"24:A0:74:53:90:EF\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations/disassociate?deleteHistory=False",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations",
								"disassociate"
							],
							"query": [
								{
									"key": "deleteHistory",
									"value": "False",
									"description": "boolean\nDefault: false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign role to client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"543e2fa5-dae3-497f-aa96-e06da8fcb379\",\n  \"mac\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations/assignrole",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations",
								"assignrole"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get station by MAC address",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations/{{macaddress}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations",
								"{{macaddress}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for Station report (/v1/stations/{stationId}/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Site report. (Use /v1/stations/report/widgets to get all available widgets. Select one. Then, use /v1/stations/{stationId}/report (PUT))",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations/{{stationId}}/report?duration=3H&widgets=[\"networkHealth\"]",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations",
								"{{stationId}}",
								"report"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string (Duration)\nEnum: \"D_3h\" \"D_3d\" \"D_14d\"\nReport duration"
								},
								{
									"key": "widgets",
									"value": "[\"networkHealth\"]",
									"description": "Array of objects (WidgetInfoElement)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Location report for a station",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations/{{stationId}}/location?duration=3H",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations",
								"{{stationId}}",
								"location"
							],
							"query": [
								{
									"key": "duration",
									"value": "3H",
									"description": "string (Duration)\nEnum: \"D_3h\" \"D_3d\" \"D_14d\"\nReport duration"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all station events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/stations/events/{{macaddress}}?startTime={{myStartTime}}&endtime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"stations",
								"events",
								"{{macaddress}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endtime",
									"value": "{{myEndTime}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get acess point wireless and wired interface statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/ifstats/{{apSerialNumber}}?rfStats=False",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"ifstats",
								"{{apSerialNumber}}"
							],
							"query": [
								{
									"key": "rfStats",
									"value": "False",
									"description": "boolean\nIf true, returns the RF statistics only"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get access point wireless and wired statistics across all sites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aps/ifstats?rfStats=False",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aps",
								"ifstats"
							],
							"query": [
								{
									"key": "rfStats",
									"value": "False",
									"description": "boolean\nIf true, returns the RF statistics only"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SwitchManager",
			"item": [
				{
					"name": "Get list of switches for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches"
							],
							"query": [
								{
									"key": "includeBpe",
									"value": null,
									"description": "boolean\nFlag to specify if all the BPEs of the CB are to be included",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get switch display names",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/displaynames",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"displaynames"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete switches for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/list",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Provide list of switches to be rebooted during next check-in",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ],\n  \"custId\": \"...\",\n  \"id\": \"...\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/reboot",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"reboot"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign switches to a site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"siteId\": \"26942420-6179-11e8-a0a4-c98f03226474\",\n  \"serialNumbers\": [\n    \"...\",\n    \"...\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/assign",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get switch by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update switch configuration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": null,\n  \"canEdit\": null,\n  \"serialNumber\": \"1733N-42224\",\n  \"macaddress\": \"00:04:96:9e:fc:bc\",\n  \"softwareVersion\": \"1.2.5.13\",\n  \"hostSite\": \"ThornhillCentralized\",\n  \"switchType\": \"210-48p-GE4\",\n  \"sysDescription\": \"200SeriesOS 210-48p-GE4\",\n  \"sysUpTime\": 0,\n  \"systemName\": \"1733N-42224\",\n  \"sysOid\": \"1.3.6.1.4.1.1916.2.265\",\n  \"operatingSystem\": \"200SeriesOS\",\n  \"mgmtIpAddress\": \"11.12.12.3\",\n  \"mgmtPort\": \"\",\n  \"siteId\": \"eaab6b13-865d-4475-a26f-d3d95b6e0812\",\n  \"lacpEnabled\": false,\n  \"lacploggingLevel\": \"warning\",\n  \"ports\": [\n    {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"portSpeed\": \"AUTO\",\n      \"typeOfService\": 0,\n      \"adminStatus\": \"On\",\n      \"defaultPolicy\": null,\n      \"poePortConfig\": {\n        \"custId\": null,\n        \"id\": null,\n        \"canDelete\": null,\n        \"canEdit\": null,\n        \"enabled\": false,\n        \"portName\": \"0/1\",\n        \"poePortAlias\": \"1\",\n        \"detection\": \"poe_802_3af_only\",\n        \"operatorLimit\": \"mw_30000\",\n        \"priority\": \"low\"\n      },\n      \"lagmembers\": [],\n      \"lagType\": \"None\",\n      \"taggedTopologies\": [\n        \"97976030-feec-4730-8585-cc6eeaa786e3\"\n      ],\n      \"untaggedTopology\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n      \"pvid\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n      \"dot1xEnabled\": false,\n      \"macAuthEnabled\": false,\n      \"portNumber\": \"1\",\n      \"portName\": \"0/1\",\n      \"portType\": \"INTERSWITCH\",\n      \"portAlias\": \"1\",\n      \"lldpenabled\": true,\n      \"stpenabled\": true,\n      \"portCapability\": {\n        \"custId\": null,\n        \"id\": null,\n        \"canDelete\": null,\n        \"canEdit\": null,\n        \"speedsSupported\": [\n          \"AUTO\"\n        ],\n        \"poeSupported\": true,\n        \"mediaType\": \"Copper_1G\"\n      }\n    }\n  ],\n  \"dot1xConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"enabledOnDevice\": false,\n    \"loggingLevel\": \"none\",\n    \"radiusServer\": \"127.0.0.0\",\n    \"sharedSecret\": \"\",\n    \"dot1XPorts\": null\n  },\n  \"lldpConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"enabled\": true,\n    \"loggingLevel\": \"none\",\n    \"enableTLVMgmtAddress\": true,\n    \"mgmtAddress\": \"127.0.0.1\",\n    \"enableTLVSystemName\": true,\n    \"systemName\": \"\",\n    \"enableTlvLocation\": true,\n    \"location\": \"Default\"\n  },\n  \"stpConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"enabled\": true,\n    \"loggingLevel\": \"none\",\n    \"version\": \"MSTP\",\n    \"bridgePriority\": 57344\n  },\n  \"macAuthConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"enabled\": false,\n    \"loggingLevel\": \"none\",\n    \"radiusServer\": \"\",\n    \"sharedSecret\": \"\"\n  },\n  \"license\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"systemLicense\": \"\",\n    \"effectiveLicense\": null,\n    \"featurePacks\": {}\n  },\n  \"poeElement\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"poeEnabled\": false,\n    \"poeDisconnectPrecedence\": \"DENY_PORT\",\n    \"poeLogginLevel\": \"emergency\"\n  },\n  \"logins\": [],\n  \"capability\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"poeSupported\": true,\n    \"fanCount\": 3,\n    \"powerSupplyCount\": 1,\n    \"maxBasePoePower\": 370\n  },\n  \"currentAssets\": [\n    {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"hardwareType\": \"210-48p-GE4\",\n      \"deviceFirmwareVersion\": \"1.2.5.13\",\n      \"assetType\": \"FIRMWARE\",\n      \"app\": \"fastpath\",\n      \"appVersion\": \"1.2.5.13\",\n      \"imageName\": null,\n      \"url\": null,\n      \"imageSize\": 0\n    }\n  ],\n  \"desiredAssets\": [\n    {\n      \"custId\": null,\n      \"id\": null,\n      \"canDelete\": null,\n      \"canEdit\": null,\n      \"hardwareType\": \"210-48p-GE4\",\n      \"deviceFirmwareVersion\": \"1.2.5.6\",\n      \"assetType\": \"FIRMWARE\",\n      \"app\": \"xos\",\n      \"appVersion\": \"1.2.5.6\",\n      \"imageName\": \"210-series_V1.02.05.0006.stk\",\n      \"url\": \"https://extremecontrol:8443/switch/210-series_V1.02.05.0006.stk\",\n      \"imageSize\": 0\n    }\n  ],\n  \"igmpEnabled\": false,\n  \"floorId\": null,\n  \"enableSSHAccess\": false,\n  \"baseService\": null\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a switch for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}"
							],
							"query": [
								{
									"key": "includeBpe",
									"value": null,
									"description": "boolean\nFlag to specify if all the BPEs of the CB are to be included",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable download of logs from switch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/logs",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable switch reboot during next check-in",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/reboot",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"reboot"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone a switch configuration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/clone?from&to",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"clone"
							],
							"query": [
								{
									"key": "from",
									"value": null,
									"description": "string ^[[\\\\p{Print}&&[^\\t\\n\\r;:&\\\\p{Cntrl}]]*]{11,11}$\nA non-empty, valid switch serial number from which the configuration should be cloned"
								},
								{
									"key": "to",
									"value": null,
									"description": "string ^[[\\\\p{Print}&&[^\\t\\n\\r;:&\\\\p{Cntrl}]]*]{11,11}$\nA non-empty, valid switch serial number to which the configuration should be cloned."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable switch reset during next check-in",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/reset",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set the flag on the backend, indicating the opening of the remote console. Admin permission levels - Full Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/console/{{consoleAction}}?timeout=30",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"console",
								"{{consoleAction}}"
							],
							"query": [
								{
									"key": "timeout",
									"value": "30",
									"description": "number\nA valid timeout value. A valid integer value. The range is between 0 and 32768"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of traces download URL for a switch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/tracurls",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"tracurls"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable switch upgrade during next check-in",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/upgrade",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Method to configure a switch port",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": null,\n  \"canEdit\": null,\n  \"portSpeed\": \"AUTO\",\n  \"typeOfService\": 0,\n  \"adminStatus\": \"On\",\n  \"defaultPolicy\": null,\n  \"poePortConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"enabled\": false,\n    \"portName\": \"0/1\",\n    \"poePortAlias\": \"1\",\n    \"detection\": \"poe_802_3af_only\",\n    \"operatorLimit\": \"mw_30000\",\n    \"priority\": \"low\"\n  },\n  \"lagmembers\": [],\n  \"lagType\": \"None\",\n  \"taggedTopologies\": [\n    \"97976030-feec-4730-8585-cc6eeaa786e3\"\n  ],\n  \"untaggedTopology\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n  \"pvid\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n  \"dot1xEnabled\": false,\n  \"macAuthEnabled\": false,\n  \"portNumber\": \"1\",\n  \"portName\": \"0/1\",\n  \"portType\": \"INTERSWITCH\",\n  \"portAlias\": \"1\",\n  \"lldpenabled\": true,\n  \"stpenabled\": true,\n  \"portCapability\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"speedsSupported\": [\n      \"AUTO\"\n    ],\n    \"poeSupported\": true,\n    \"mediaType\": \"Copper_1G\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/ports/{{portNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"ports",
								"{{portNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a specified switch port slot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/slots/{{slotNumber}}/ports/{{portNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"slots",
								"{{slotNumber}}",
								"ports",
								"{{portNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the port configuration on a specified switch port slot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": null,\n  \"canDelete\": null,\n  \"canEdit\": null,\n  \"portSpeed\": \"AUTO\",\n  \"typeOfService\": 0,\n  \"adminStatus\": \"On\",\n  \"defaultPolicy\": null,\n  \"poePortConfig\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"enabled\": false,\n    \"portName\": \"0/1\",\n    \"poePortAlias\": \"1\",\n    \"detection\": \"poe_802_3af_only\",\n    \"operatorLimit\": \"mw_30000\",\n    \"priority\": \"low\"\n  },\n  \"lagmembers\": [],\n  \"lagType\": \"None\",\n  \"taggedTopologies\": [\n    \"97976030-feec-4730-8585-cc6eeaa786e3\"\n  ],\n  \"untaggedTopology\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n  \"pvid\": \"efd5f044-26c8-11e7-93ae-92361f002671\",\n  \"dot1xEnabled\": false,\n  \"macAuthEnabled\": false,\n  \"portNumber\": \"1\",\n  \"portName\": \"0/1\",\n  \"portType\": \"INTERSWITCH\",\n  \"portAlias\": \"1\",\n  \"lldpenabled\": true,\n  \"stpenabled\": true,\n  \"portCapability\": {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"speedsSupported\": [\n      \"AUTO\"\n    ],\n    \"poeSupported\": true,\n    \"mediaType\": \"Copper_1G\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/slots/{{slotNumber}}/ports/{{portNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"slots",
								"{{slotNumber}}",
								"ports",
								"{{portNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of all CLI backups for the switch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/clibackups",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"clibackups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate request to change the configuration mode",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/configurationmode/{{configurationMode}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"configurationmode",
								"{{configurationMode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate request to CliConfiguration Module to backup the script",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/cliconfigs/backup",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"cliconfigs",
								"backup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate request to send the specified CLI script to the switch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/cliconfigs/restore/{{CLIScriptName}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"cliconfigs",
								"restore",
								"{{CLIScriptName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate request to send the specified CLI script to the switch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"...\",\n  \"password\": \"...\",\n  \"accessLevel\": \"READ_ONLY\",\n  \"custId\": \"...\",\n  \"id\": \"...\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/login",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for Port report (/v1/switches/{serialNumber}/ports/{portId}/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/ports/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"ports",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Port report. (Use /v1/switches/ports/report/widgets to get all available widgets. Select one. Then, use /v1/switches/{serialNumber}/ports/{portId}/report (PUT))",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/ports/{{portId}}/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"ports",
								"{{portId}}",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available widgets for Switch report (/v1/switches/{serialNumber}/report PUT)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/report/widgets",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"report",
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Switch report. (Use /v1/switches/report/widgets to get all available widgets. Select one. Then, use /v1/switches/{serialNumber}/report (PUT))",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\": \"D_14d\",\n  \"widgets\": [\n    {\n      \"id\": \"ulDlUsageTimeseries\",\n      \"filters\": [\n        \"Filter_2_4\"\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/switches/{{switchSerialNumber}}/report",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"switches",
								"{{switchSerialNumber}}",
								"report"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TopologyManager",
			"item": [
				{
					"name": "Get a list of all topologies",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/topologies",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"topologies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new topology",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"\",\n  \"id\": \"c50e25f6-413e-11e9-97b3-000c29a7fe8f\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"VlanGroup_1 dsf\",\n  \"vlanid\": 5,\n  \"tagged\": false,\n  \"multicastFilters\": [],\n  \"multicastBridging\": false,\n  \"mode\": \"BridgedAtAc\",\n  \"group\": 0,\n  \"members\": [],\n  \"mtu\": 1500,\n  \"enableMgmtTraffic\": false,\n  \"dhcpServers\": \"\",\n  \"l3Presence\": true,\n  \"ipAddress\": \"0.0.0.0\",\n  \"cidr\": 0,\n  \"gateway\": \"0.0.0.0\",\n  \"dhcpStartIpRange\": \"0.0.0.0\",\n  \"dhcpEndIpRange\": \"0.0.0.0\",\n  \"dhcpMode\": \"DHCPNone\",\n  \"dhcpDomain\": \"\",\n  \"dhcpDefaultLease\": 36000,\n  \"dhcpMaxLease\": 2592000,\n  \"dhcpDnsServers\": \"\",\n  \"wins\": \"\",\n  \"cert\": 0,\n  \"certCa\": 0,\n  \"portName\": \"csi9\",\n  \"vlanMapToEsa\": -1,\n  \"dhcpExclusions\": [],\n  \"foreignIpAddress\": \"0.0.0.0\",\n  \"apRegistration\": false,\n  \"fqdn\": \"\",\n  \"isid\": 0,\n  \"pool\": [\n    \"97976030-feec-4730-8585-cc6eeaa786e3\"\n  ],\n  \"proxied\": \"Local\",\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"blockNonEssentialBroadcast\": false\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/topologies",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"topologies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get topology with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/topologies/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"topologies",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get topology name to ID map",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/topologies/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"topologies",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get topology by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/topologies/{{topologyId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"topologies",
								"{{topologyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Method to update a topology",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"\",\n  \"id\": \"c50e25f6-413e-11e9-97b3-000c29a7fe8f\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"VlanGroup_1 dsf\",\n  \"vlanid\": 5,\n  \"tagged\": false,\n  \"multicastFilters\": [],\n  \"multicastBridging\": false,\n  \"mode\": \"BridgedAtAc\",\n  \"group\": 0,\n  \"members\": [],\n  \"mtu\": 1500,\n  \"enableMgmtTraffic\": false,\n  \"dhcpServers\": \"\",\n  \"l3Presence\": true,\n  \"ipAddress\": \"0.0.0.0\",\n  \"cidr\": 0,\n  \"gateway\": \"0.0.0.0\",\n  \"dhcpStartIpRange\": \"0.0.0.0\",\n  \"dhcpEndIpRange\": \"0.0.0.0\",\n  \"dhcpMode\": \"DHCPNone\",\n  \"dhcpDomain\": \"\",\n  \"dhcpDefaultLease\": 36000,\n  \"dhcpMaxLease\": 2592000,\n  \"dhcpDnsServers\": \"\",\n  \"wins\": \"\",\n  \"cert\": 0,\n  \"certCa\": 0,\n  \"portName\": \"csi9\",\n  \"vlanMapToEsa\": -1,\n  \"dhcpExclusions\": [],\n  \"foreignIpAddress\": \"0.0.0.0\",\n  \"apRegistration\": false,\n  \"fqdn\": \"\",\n  \"isid\": 0,\n  \"pool\": [\n    \"97976030-feec-4730-8585-cc6eeaa786e3\"\n  ],\n  \"proxied\": \"Local\",\n  \"features\": [\n    \"CENTRALIZED-SITE\"\n  ],\n  \"blockNonEssentialBroadcast\": false\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/topologies/{{topologyId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"topologies",
								"{{topologyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete topology for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/topologies/{{topologyId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"topologies",
								"{{topologyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of all topologies",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/topologies",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"topologies"
							],
							"query": [
								{
									"key": "modes",
									"value": null,
									"description": "Array of strings (Modes)\nItems Enum: \"BridgedAtAp\" \"BridgedAtAc\" \"Physical\" \"Management\" \"FabricAttach\" \"Vxlan\" \"Gre\"\nExample: modes=.../topologies?modes=BridgedAtAp,ISC\nList of topology modes.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "WorkFlowManager",
			"item": [
				{
					"name": "Get sites or profiles that are using a given device or profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/workflow?type=Unknown&id={{apSerialNumber}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"workflow"
							],
							"query": [
								{
									"key": "type",
									"value": "Unknown",
									"description": "string (ConfigurableObjectType)\nEnum: \"Unknown\" \"Profile\" \"Adsp\" \"Analytics\" \"Ap\" \"Iot\" \"Cos\" \"Positioning\" \"Rfmgmt\" \"Role\" \"Switch\" \"Xlocation\" \"Service\" \"Rtls\" \"Topology\" \"Devicegroup\" \"Site\" \"Backup\" \"Ntp\" \"L2port\" \"PhysicalInterface\" \"AAAPolicy\" \"Availability\" \"Meshpoint\" \"License\" \"Dns\"\nExample: type=Unknown\nThe type of device or profile that users want to know which sites or profiles are using it."
								},
								{
									"key": "id",
									"value": "{{apSerialNumber}}",
									"description": "string\nWhen the device type is Switch or AP, users running an ID query must provide a serial number. Otherwise, users must provide a valid UUID."
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SwitchPortProfileManager",
			"item": [
				{
					"name": "Get list of all port profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/switchportprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"switchportprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new port profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"portSpeed\": \"UNKNOWN\",\n  \"typeOfService\": 0,\n  \"adminStatus\": \"On\",\n  \"defaultPolicy\": \"string\",\n  \"poePortConfig\": {\n    \"enabled\": true,\n    \"portName\": \"...\",\n    \"poePortAlias\": \"...\",\n    \"detection\": \"bypass\",\n    \"operatorLimit\": \"mw_30000\",\n    \"priority\": \"critical\",\n    \"custId\": \"...\",\n    \"id\": \"...\",\n    \"canDelete\": true,\n    \"canEdit\": true\n  },\n  \"lagmembers\": [\n    \"string\"\n  ],\n  \"lagType\": \"Master\",\n  \"taggedTopologies\": [\n    \"string\"\n  ],\n  \"untaggedTopology\": \"string\",\n  \"pvid\": \"string\",\n  \"duplex\": \"ETH_DUPLEX_TYPE_HALF\",\n  \"enableEEE\": true,\n  \"dot1xEnabled\": true,\n  \"macAuthEnabled\": true,\n  \"name\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/switchportprofile",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"switchportprofile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a switch port profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/switchportprofile/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"switchportprofile",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get switch port profile names mapped to IDs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/switchportprofile/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"switchportprofile",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a profile by its uuid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/switchportprofile/{{profileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"switchportprofile",
								"{{profileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a port profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"portSpeed\": \"UNKNOWN\",\n  \"typeOfService\": 0,\n  \"adminStatus\": \"On\",\n  \"defaultPolicy\": \"string\",\n  \"poePortConfig\": {\n    \"enabled\": true,\n    \"portName\": \"...\",\n    \"poePortAlias\": \"...\",\n    \"detection\": \"bypass\",\n    \"operatorLimit\": \"mw_30000\",\n    \"priority\": \"critical\",\n    \"custId\": \"...\",\n    \"id\": \"...\",\n    \"canDelete\": true,\n    \"canEdit\": true\n  },\n  \"lagmembers\": [\n    \"string\"\n  ],\n  \"lagType\": \"Master\",\n  \"taggedTopologies\": [\n    \"string\"\n  ],\n  \"untaggedTopology\": \"string\",\n  \"pvid\": \"string\",\n  \"duplex\": \"ETH_DUPLEX_TYPE_HALF\",\n  \"enableEEE\": true,\n  \"dot1xEnabled\": true,\n  \"macAuthEnabled\": true,\n  \"name\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/switchportprofile/{{profileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"switchportprofile",
								"{{profileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a profile by its uuid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/switchportprofile/{{profileId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"switchportprofile",
								"{{profileId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EGuestManager",
			"item": [
				{
					"name": "Get all EGuest Services",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/eguest",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"eguest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new EGuest",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"cpFqdn\": \"string\",\n  \"authenticationRadiusServer\": {\n    \"custId\": \"string\",\n    \"id\": \"string\",\n    \"canDelete\": true,\n    \"canEdit\": true,\n    \"ipAddress\": \"10.255.255.2\",\n    \"serverType\": \"Standard\",\n    \"trustPoint\": \"string\",\n    \"sharedSecret\": \"secret\",\n    \"radiusAuthProtocol\": \"PAP\",\n    \"totalAuthRetries\": 3,\n    \"authTimeout\": 5,\n    \"authPort\": 1812,\n    \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n    \"mbaPassword\": \"string\",\n    \"port\": 1813,\n    \"totalRetries\": 3,\n    \"timeout\": 5,\n    \"pollInterval\": 60\n  },\n  \"accountingRadiusServer\": {\n    \"custId\": \"string\",\n    \"id\": \"string\",\n    \"canDelete\": true,\n    \"canEdit\": true,\n    \"ipAddress\": \"10.255.255.2\",\n    \"serverType\": \"Standard\",\n    \"trustPoint\": \"string\",\n    \"sharedSecret\": \"secret\",\n    \"radiusAuthProtocol\": \"PAP\",\n    \"totalAuthRetries\": 3,\n    \"authTimeout\": 5,\n    \"authPort\": 1812,\n    \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n    \"mbaPassword\": \"string\",\n    \"port\": 1813,\n    \"totalRetries\": 3,\n    \"timeout\": 5,\n    \"pollInterval\": 60\n  },\n  \"userName\": \"string\",\n  \"password\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/eguest",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"eguest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the default EGuest configuration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/eguest/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"eguest",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get EGuest name to ID map",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/eguest/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"eguest",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an EGuest by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/eguest/{{eguestId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"eguest",
								"{{eguestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an EGuest",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"cpFqdn\": \"string\",\n  \"authenticationRadiusServer\": {\n    \"custId\": \"string\",\n    \"id\": \"string\",\n    \"canDelete\": true,\n    \"canEdit\": true,\n    \"ipAddress\": \"10.255.255.2\",\n    \"serverType\": \"Standard\",\n    \"trustPoint\": \"string\",\n    \"sharedSecret\": \"secret\",\n    \"radiusAuthProtocol\": \"PAP\",\n    \"totalAuthRetries\": 3,\n    \"authTimeout\": 5,\n    \"authPort\": 1812,\n    \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n    \"mbaPassword\": \"string\",\n    \"port\": 1813,\n    \"totalRetries\": 3,\n    \"timeout\": 5,\n    \"pollInterval\": 60\n  },\n  \"accountingRadiusServer\": {\n    \"custId\": \"string\",\n    \"id\": \"string\",\n    \"canDelete\": true,\n    \"canEdit\": true,\n    \"ipAddress\": \"10.255.255.2\",\n    \"serverType\": \"Standard\",\n    \"trustPoint\": \"string\",\n    \"sharedSecret\": \"secret\",\n    \"radiusAuthProtocol\": \"PAP\",\n    \"totalAuthRetries\": 3,\n    \"authTimeout\": 5,\n    \"authPort\": 1812,\n    \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n    \"mbaPassword\": \"string\",\n    \"port\": 1813,\n    \"totalRetries\": 3,\n    \"timeout\": 5,\n    \"pollInterval\": 60\n  },\n  \"userName\": \"string\",\n  \"password\": \"string\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/eguest/{{eguestId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"eguest",
								"{{eguestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an EGuest",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/eguest/{{eguestId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"eguest",
								"{{eguestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AAAPolicyManager",
			"item": [
				{
					"name": "Get all AAA Policies",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aaapolicy",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aaapolicy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new AAA Policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"healthCheck\": 60,\n  \"accountingStart\": \"NoDelay\",\n  \"serverPoolingMode\": \"failover\",\n  \"attributes\": {\n    \"calledStationId\": \"Serial\",\n    \"nasIpAddress\": \"10.41.0.1\",\n    \"nasId\": \"NAS 1\"\n  },\n  \"accountingInterimInterval\": 60,\n  \"includeFramedIp\": false,\n  \"accountingType\": \"StartStop\",\n  \"authenticationType\": \"PAP\",\n  \"radiusAccountingEnabled\": true,\n  \"authenticationRadiusServers\": [\n    {\n      \"custId\": \"string\",\n      \"id\": \"string\",\n      \"canDelete\": true,\n      \"canEdit\": true,\n      \"ipAddress\": \"10.255.255.2\",\n      \"serverType\": \"Standard\",\n      \"trustPoint\": \"string\",\n      \"sharedSecret\": \"secret\",\n      \"radiusAuthProtocol\": \"PAP\",\n      \"totalAuthRetries\": 3,\n      \"authTimeout\": 5,\n      \"authPort\": 1812,\n      \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n      \"mbaPassword\": \"string\",\n      \"port\": 1813,\n      \"totalRetries\": 3,\n      \"timeout\": 5,\n      \"pollInterval\": 60\n    }\n  ],\n  \"accountingRadiusServers\": [\n    {\n      \"custId\": \"string\",\n      \"id\": \"string\",\n      \"canDelete\": true,\n      \"canEdit\": true,\n      \"ipAddress\": \"10.255.255.2\",\n      \"serverType\": \"Standard\",\n      \"trustPoint\": \"string\",\n      \"sharedSecret\": \"secret\",\n      \"radiusAuthProtocol\": \"PAP\",\n      \"totalAuthRetries\": 3,\n      \"authTimeout\": 5,\n      \"authPort\": 1812,\n      \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n      \"mbaPassword\": \"string\",\n      \"port\": 1813,\n      \"totalRetries\": 3,\n      \"timeout\": 5,\n      \"pollInterval\": 60\n    }\n  ],\n  \"reportNasLocation\": true,\n  \"operatorNamespace\": \"Realm\",\n  \"operatorName\": \"string\",\n  \"accountingAccessAlg\": \"Broadcast\",\n  \"denyOnAuthFailure\": {\n    \"attempts\": 5,\n    \"interval\": 3,\n    \"timeout\": 1\n  },\n  \"reauthTimeoutOvr\": 0\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aaapolicy",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aaapolicy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the default AAA Policy configuration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aaapolicy/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aaapolicy",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AAA Policy name to ID map",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aaapolicy/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aaapolicy",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a AAA policy by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aaapolicy/{{aaapolicyId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aaapolicy",
								"{{aaapolicyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a AAA Policy instance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"healthCheck\": 60,\n  \"accountingStart\": \"NoDelay\",\n  \"serverPoolingMode\": \"failover\",\n  \"attributes\": {\n    \"calledStationId\": \"Serial\",\n    \"nasIpAddress\": \"10.41.0.1\",\n    \"nasId\": \"NAS 1\"\n  },\n  \"accountingInterimInterval\": 60,\n  \"includeFramedIp\": false,\n  \"accountingType\": \"StartStop\",\n  \"authenticationType\": \"PAP\",\n  \"radiusAccountingEnabled\": true,\n  \"authenticationRadiusServers\": [\n    {\n      \"custId\": \"string\",\n      \"id\": \"string\",\n      \"canDelete\": true,\n      \"canEdit\": true,\n      \"ipAddress\": \"10.255.255.2\",\n      \"serverType\": \"Standard\",\n      \"trustPoint\": \"string\",\n      \"sharedSecret\": \"secret\",\n      \"radiusAuthProtocol\": \"PAP\",\n      \"totalAuthRetries\": 3,\n      \"authTimeout\": 5,\n      \"authPort\": 1812,\n      \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n      \"mbaPassword\": \"string\",\n      \"port\": 1813,\n      \"totalRetries\": 3,\n      \"timeout\": 5,\n      \"pollInterval\": 60\n    }\n  ],\n  \"accountingRadiusServers\": [\n    {\n      \"custId\": \"string\",\n      \"id\": \"string\",\n      \"canDelete\": true,\n      \"canEdit\": true,\n      \"ipAddress\": \"10.255.255.2\",\n      \"serverType\": \"Standard\",\n      \"trustPoint\": \"string\",\n      \"sharedSecret\": \"secret\",\n      \"radiusAuthProtocol\": \"PAP\",\n      \"totalAuthRetries\": 3,\n      \"authTimeout\": 5,\n      \"authPort\": 1812,\n      \"preferredMacAddressFormat\": \"UPPERCASE_NO_DELIMITERS\",\n      \"mbaPassword\": \"string\",\n      \"port\": 1813,\n      \"totalRetries\": 3,\n      \"timeout\": 5,\n      \"pollInterval\": 60\n    }\n  ],\n  \"reportNasLocation\": true,\n  \"operatorNamespace\": \"Realm\",\n  \"operatorName\": \"string\",\n  \"accountingAccessAlg\": \"Broadcast\",\n  \"denyOnAuthFailure\": {\n    \"attempts\": 5,\n    \"interval\": 3,\n    \"timeout\": 1\n  },\n  \"reauthTimeoutOvr\": 0\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aaapolicy/{{aaapolicyId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aaapolicy",
								"{{aaapolicyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a AAA Policy instance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/aaapolicy/{{aaapolicyId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"aaapolicy",
								"{{aaapolicyId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BestPracticeManager",
			"item": [
				{
					"name": "Perform best practice evaluation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/bestpractices/evaluate",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"bestpractices",
								"evaluate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Accept evaluation for specified best practice condition and update evaluationResult as intentional",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/bestpractices/{{bestPracticeId}}/accept",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"bestpractices",
								"{{bestPracticeId}}",
								"accept"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GeolocationManager",
			"item": [
				{
					"name": "Get list of geolocation subgraphs on the floor",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/geolocation/{{floorId}}/overview",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"geolocation",
								"{{floorId}}",
								"overview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get summary of geolocation information per site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/geolocation/floors/{{siteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"geolocation",
								"floors",
								"{{siteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request AP-to-AP ranging for this floor",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/geolocation/{{floorId}}/range",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"geolocation",
								"{{floorId}}",
								"range"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request building the subgraphs and derivation of coordinates for this floor",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/geolocation/{{floorId}}/autolocate",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"geolocation",
								"{{floorId}}",
								"autolocate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ApplicationKeysManager",
			"item": [
				{
					"name": "Get list of all application keys",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/appkeys",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"appkeys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new application key",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/appkeys",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"appkeys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an application key by appKey",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/appkeys/{{appKey}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"appkeys",
								"{{appKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an application key",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/appkeys/{{appKey}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"appkeys",
								"{{appKey}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MeshpointManager",
			"item": [
				{
					"name": "Get list of all meshpoints for a customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new meshpoint",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"26942420-6179-11e8-a0a4-c98f03226474\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"meshpoint1\",\n  \"meshId\": \"meshpoint1\",\n  \"root\": false,\n  \"controlVlan\": \"4459ee6c-2f76-11e7-93ae-92361f002671\",\n  \"neighborTimeout\": 120,\n  \"privacy\": {\n    \"PskElement\": {\n      \"keyHexEncoded\": false,\n      \"presharedKey\": \"abcde12345\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get meshpoint with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profile meshpoint with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/profile/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"profile",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get meshpoint names mapped to IDs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a meshpoint by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/{{meshpointId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"{{meshpointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a meshpoint by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": null,\n  \"id\": \"26942420-6179-11e8-a0a4-c98f03226474\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"meshpoint1\",\n  \"meshId\": \"meshpoint1\",\n  \"root\": false,\n  \"controlVlan\": \"4459ee6c-2f76-11e7-93ae-92361f002671\",\n  \"neighborTimeout\": 120,\n  \"privacy\": {\n    \"PskElement\": {\n      \"keyHexEncoded\": false,\n      \"presharedKey\": \"abcde12345\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/{{meshpointId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"{{meshpointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a meshpoint by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/{{meshpointId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"{{meshpointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a meshpoint tree by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/tree/{{meshpointId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"tree",
								"{{meshpointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a meshpoint AP's information by its ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v3/meshpoints/{{meshpointId}}/bssid",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v3",
								"meshpoints",
								"{{meshpointId}}",
								"bssid"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MSPManager",
			"item": [
				{
					"name": "Get a list of all MSPBriefSites instances for a tenant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/msp/briefsites/{{tenantId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"msp",
								"briefsites",
								"{{tenantId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TestSuiteManager",
			"item": [
				{
					"name": "Get list of all test suites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new test suite",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": null,\n  \"name\": \"test1\",\n  \"useDhcp\": true,\n  \"mac\": {\n    \"default\": true\n  },\n  \"tests\": [\n    {\n      \"cmd\": \"Ping\",\n      \"enabled\": true,\n      \"dest\": \"www.google.com\",\n      \"cmdParams\": \"-c 10\"\n    },\n    {\n      \"cmd\": \"Traceroute\",\n      \"enabled\": true,\n      \"dest\": \"www.yahoo.com\",\n      \"cmdParams\": \"\"\n    },\n    {\n      \"cmd\": \"Iperf\",\n      \"enabled\": true,\n      \"dest\": \"\",\n      \"cmdParams\": \"-c 134.141.122.41 -t 30 -J\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a test suite profile with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get test suite names mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get test suite by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites/{{testSuiteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites",
								"{{testSuiteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a test suite by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": null,\n  \"name\": \"test1\",\n  \"useDhcp\": true,\n  \"mac\": {\n    \"default\": true\n  },\n  \"tests\": [\n    {\n      \"cmd\": \"Ping\",\n      \"enabled\": true,\n      \"dest\": \"www.google.com\",\n      \"cmdParams\": \"-c 10\"\n    },\n    {\n      \"cmd\": \"Traceroute\",\n      \"enabled\": true,\n      \"dest\": \"www.yahoo.com\",\n      \"cmdParams\": \"\"\n    },\n    {\n      \"cmd\": \"Iperf\",\n      \"enabled\": true,\n      \"dest\": \"\",\n      \"cmdParams\": \"-c 134.141.122.41 -t 30 -J\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites/{{testSuiteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites",
								"{{testSuiteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete test suite",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites/{{testSuiteId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites",
								"{{testSuiteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete test suite list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testsuites/list?testSuiteIds",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testsuites",
								"list"
							],
							"query": [
								{
									"key": "testSuiteIds",
									"value": null,
									"description": " REQUIRED STRING: <uuid>\nA non-empty, valid test suite ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start a test run by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"string\"\n]"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/start",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of all test runs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a test run",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"duration\": 1,\n  \"serviceId\": \"string\",\n  \"testSuiteId\": \"string\",\n  \"devices\": [\n    \"1730Y-1007800000\"\n  ],\n  \"iperfBasePort\": 0,\n  \"bandId\": [\n    \"Band5\"\n  ],\n  \"testClient\": \"Wireless\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AP test run with default values",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/default",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get APTestRunElement names mapped to ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/nametoidmap",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"nametoidmap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get test run by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/{{testRunId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"{{testRunId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a test run by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custId\": \"string\",\n  \"id\": \"string\",\n  \"canDelete\": true,\n  \"canEdit\": true,\n  \"name\": \"string\",\n  \"duration\": 1,\n  \"serviceId\": \"string\",\n  \"testSuiteId\": \"string\",\n  \"devices\": [\n    \"1730Y-1007800000\"\n  ],\n  \"iperfBasePort\": 0,\n  \"bandId\": [\n    \"Band5\"\n  ],\n  \"testClient\": \"Wireless\"\n}"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/{{testRunId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"{{testRunId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete AP test run",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/{{testRunId}}",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"{{testRunId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return stats for a test run by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/{{testRunId}}/results",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"{{testRunId}}",
								"results"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete stats for a test run by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/{{testRunId}}/results",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"{{testRunId}}",
								"results"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete list of the test run results by their IDs and start time",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/apservices/testrun/result/list?idStartTime",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"apservices",
								"testrun",
								"result",
								"list"
							],
							"query": [
								{
									"key": "idStartTime",
									"value": null,
									"description": "string <uuid:time>\nExample: idStartTime=bfea75f9-f36e-46bb-86ef-4507bffcf507:1668221162,bfea75f9-f36e-46bb-86ef-4507bffcf507:2668221164\nA non-empty, valid test run ID:start time(timestamp in seconds since epoch)"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DeviceManager",
			"item": [
				{
					"name": "Get access point adoption rules",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/devices/adoptionrules",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"devices",
								"adoptionrules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update access point adoption rules",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"custId\": null,\n    \"id\": null,\n    \"canDelete\": null,\n    \"canEdit\": null,\n    \"deviceCategory\": \"AP\",\n    \"ipAddress\": \"0.0.0.0\",\n    \"cidr\": 0,\n    \"hostname\": \"aaa\",\n    \"model\": \"aaa\",\n    \"serial\": \"\",\n    \"siteId\": \"eaab6b13-865d-4475-a26f-d3d95b6e0812\",\n    \"devGrName\": \"DG-3935-Blackstone\",\n    \"action\": \"allow\"\n  }\n]"
						},
						"url": {
							"raw": "https://{{controller}}:{{port}}/management/v1/devices/adoptionrules",
							"protocol": "https",
							"host": [
								"{{controller}}"
							],
							"port": "{{port}}",
							"path": [
								"management",
								"v1",
								"devices",
								"adoptionrules"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}